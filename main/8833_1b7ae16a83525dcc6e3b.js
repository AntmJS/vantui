'use strict'
;(self.webpackChunk_antmjs_vantui = self.webpackChunk_antmjs_vantui || []).push(
  [
    [8833],
    {
      8833: function (s, a, n) {
        n.r(a),
          (a.default = {
            tile: 'Form表单',
            docs: '<h1>Form 表单</h1>\n<div class="card"><h3 id="%E4%BB%8B%E7%BB%8D"><svg viewBox="0 0 1024 1024"  width="14" height="14"><path d="M491.054545 779.636364l-125.672727 125.672727c-32.581818 32.581818-76.8 51.2-123.345454 51.2s-90.763636-18.618182-123.345455-51.2c-67.490909-67.490909-67.490909-179.2 0-246.690909l223.418182-223.418182c32.581818-32.581818 76.8-51.2 123.345454-51.2s90.763636 18.618182 123.345455 51.2c13.963636 13.963636 34.909091 13.963636 46.545455 0 13.963636-13.963636 13.963636-34.909091 0-46.545455-93.090909-93.090909-246.690909-93.090909-342.109091 0L69.818182 612.072727c-46.545455 46.545455-69.818182 107.054545-69.818182 169.890909C0 847.127273 25.6 907.636364 69.818182 954.181818c46.545455 46.545455 109.381818 69.818182 169.890909 69.818182 62.836364 0 123.345455-23.272727 169.890909-69.818182l125.672727-125.672727c13.963636-13.963636 13.963636-34.909091 0-46.545455-9.309091-16.290909-30.254545-16.290909-44.218182-2.327272z" p-id="2808"></path><path d="M954.181818 69.818182c-93.090909-93.090909-246.690909-93.090909-342.109091 0l-125.672727 125.672727c-13.963636 13.963636-13.963636 34.909091 0 46.545455 13.963636 13.963636 34.909091 13.963636 46.545455 0L658.618182 116.363636c32.581818-32.581818 76.8-51.2 123.345454-51.2s90.763636 18.618182 123.345455 51.2c67.490909 67.490909 67.490909 179.2 0 246.690909l-223.418182 223.418182c-32.581818 32.581818-76.8 51.2-123.345454 51.2s-90.763636-18.618182-123.345455-51.2c-13.963636-13.963636-34.909091-13.963636-46.545455 0-13.963636 13.963636-13.963636 34.909091 0 46.545455 46.545455 46.545455 109.381818 69.818182 169.89091 69.818182 62.836364 0 123.345455-23.272727 169.890909-69.818182l223.418181-223.418182c46.545455-46.545455 69.818182-107.054545 69.818182-169.890909C1024 176.872727 998.4 116.363636 954.181818 69.818182z" p-id="2809"></path></svg>介绍</h3>\n<p>用于为数据入录、校验，支持输入框、开关、文件上传等组件类型，支持自定义组件</p>\n</div><div class="card"><h3 id="%E5%BC%95%E5%85%A5"><svg viewBox="0 0 1024 1024"  width="14" height="14"><path d="M491.054545 779.636364l-125.672727 125.672727c-32.581818 32.581818-76.8 51.2-123.345454 51.2s-90.763636-18.618182-123.345455-51.2c-67.490909-67.490909-67.490909-179.2 0-246.690909l223.418182-223.418182c32.581818-32.581818 76.8-51.2 123.345454-51.2s90.763636 18.618182 123.345455 51.2c13.963636 13.963636 34.909091 13.963636 46.545455 0 13.963636-13.963636 13.963636-34.909091 0-46.545455-93.090909-93.090909-246.690909-93.090909-342.109091 0L69.818182 612.072727c-46.545455 46.545455-69.818182 107.054545-69.818182 169.890909C0 847.127273 25.6 907.636364 69.818182 954.181818c46.545455 46.545455 109.381818 69.818182 169.890909 69.818182 62.836364 0 123.345455-23.272727 169.890909-69.818182l125.672727-125.672727c13.963636-13.963636 13.963636-34.909091 0-46.545455-9.309091-16.290909-30.254545-16.290909-44.218182-2.327272z" p-id="2808"></path><path d="M954.181818 69.818182c-93.090909-93.090909-246.690909-93.090909-342.109091 0l-125.672727 125.672727c-13.963636 13.963636-13.963636 34.909091 0 46.545455 13.963636 13.963636 34.909091 13.963636 46.545455 0L658.618182 116.363636c32.581818-32.581818 76.8-51.2 123.345454-51.2s90.763636 18.618182 123.345455 51.2c67.490909 67.490909 67.490909 179.2 0 246.690909l-223.418182 223.418182c-32.581818 32.581818-76.8 51.2-123.345454 51.2s-90.763636-18.618182-123.345455-51.2c-13.963636-13.963636-34.909091-13.963636-46.545455 0-13.963636 13.963636-13.963636 34.909091 0 46.545455 46.545455 46.545455 109.381818 69.818182 169.89091 69.818182 62.836364 0 123.345455-23.272727 169.890909-69.818182l223.418181-223.418182c46.545455-46.545455 69.818182-107.054545 69.818182-169.890909C1024 176.872727 998.4 116.363636 954.181818 69.818182z" p-id="2809"></path></svg>引入</h3>\n<p>在 Taro 文件中引入组件</p>\n<div class="code-box-max">\n<div class="copy-code-btn"></div>\n<pre><code class="language-js"><span class="hljs-keyword">import</span> { <span class="hljs-title class_">Form</span>, <span class="hljs-title class_">FormItem</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@antmjs/vantui&#x27;</span>\n</code></pre>\n</div>\n</div><h2>代码演示</h2>\n<div class="card"><h3 id="%E5%9F%BA%E7%A1%80%E7%94%A8%E6%B3%95"><svg viewBox="0 0 1024 1024"  width="14" height="14"><path d="M491.054545 779.636364l-125.672727 125.672727c-32.581818 32.581818-76.8 51.2-123.345454 51.2s-90.763636-18.618182-123.345455-51.2c-67.490909-67.490909-67.490909-179.2 0-246.690909l223.418182-223.418182c32.581818-32.581818 76.8-51.2 123.345454-51.2s90.763636 18.618182 123.345455 51.2c13.963636 13.963636 34.909091 13.963636 46.545455 0 13.963636-13.963636 13.963636-34.909091 0-46.545455-93.090909-93.090909-246.690909-93.090909-342.109091 0L69.818182 612.072727c-46.545455 46.545455-69.818182 107.054545-69.818182 169.890909C0 847.127273 25.6 907.636364 69.818182 954.181818c46.545455 46.545455 109.381818 69.818182 169.890909 69.818182 62.836364 0 123.345455-23.272727 169.890909-69.818182l125.672727-125.672727c13.963636-13.963636 13.963636-34.909091 0-46.545455-9.309091-16.290909-30.254545-16.290909-44.218182-2.327272z" p-id="2808"></path><path d="M954.181818 69.818182c-93.090909-93.090909-246.690909-93.090909-342.109091 0l-125.672727 125.672727c-13.963636 13.963636-13.963636 34.909091 0 46.545455 13.963636 13.963636 34.909091 13.963636 46.545455 0L658.618182 116.363636c32.581818-32.581818 76.8-51.2 123.345454-51.2s90.763636 18.618182 123.345455 51.2c67.490909 67.490909 67.490909 179.2 0 246.690909l-223.418182 223.418182c-32.581818 32.581818-76.8 51.2-123.345454 51.2s-90.763636-18.618182-123.345455-51.2c-13.963636-13.963636-34.909091-13.963636-46.545455 0-13.963636 13.963636-13.963636 34.909091 0 46.545455 46.545455 46.545455 109.381818 69.818182 169.89091 69.818182 62.836364 0 123.345455-23.272727 169.890909-69.818182l223.418181-223.418182c46.545455-46.545455 69.818182-107.054545 69.818182-169.890909C1024 176.872727 998.4 116.363636 954.181818 69.818182z" p-id="2809"></path></svg>基础用法</h3>\n<p>可以通过 buton 点击事件<code>onClick</code>中在 form 实例 submit 获取数据并处理，或者通过 button 的<code>formType</code>触发 onFinish\nFormItem 需要代理下级表单组件的值和触发事件</p>\n<ul>\n<li>代理的表单组件触发事件为<code>onChange</code>, 通过<code>FormItem.trigger</code>重新设置</li>\n<li>代理的表单组件默认取值为<code>value</code>, 通过<code>FormItem.valueKey</code>重新设置</li>\n<li>代理的表单组件触发事件回调事件的默认取值<code>event.detail</code>, 通过<code>FormItem.valueFormat</code>重新设置</li>\n</ul>\n<p>案例</p>\n  <div class="demo-code-show" id="form__demo1_wrapper">\n  <div class="code-box">\n <div class="demo-code-tabs"><div class="code-tab-name code-tab-name-active" id="name0">demo1.tsx</div>\n<div class="copy-code-btn"></div></div>\n<div class="code-item code-item0">\n<pre><code class="language-tsx"><span class="hljs-comment">/* eslint-disable */</span>\n<span class="hljs-keyword">import</span> react <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;react&#x27;</span>\n<span class="hljs-keyword">import</span> { <span class="hljs-title class_">Input</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@tarojs/components&#x27;</span>\n<span class="hljs-keyword">import</span> {\n  <span class="hljs-title class_">Form</span>,\n  <span class="hljs-title class_">FormItem</span>,\n  <span class="hljs-title class_">Icon</span>,\n  <span class="hljs-title class_">Switch</span>,\n  <span class="hljs-title class_">RadioGroup</span>,\n  <span class="hljs-title class_">Radio</span>,\n  <span class="hljs-title class_">CheckboxGroup</span>,\n  <span class="hljs-title class_">Checkbox</span>,\n  <span class="hljs-title class_">Slider</span>,\n  <span class="hljs-title class_">Rate</span>,\n  <span class="hljs-title class_">Stepper</span>,\n  <span class="hljs-title class_">Button</span>,\n  <span class="hljs-title class_">Dialog</span>,\n} <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@antmjs/vantui&#x27;</span>\n\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> <span class="hljs-keyword">function</span> <span class="hljs-title function_">Demo</span>(<span class="hljs-params"></span>) {\n  <span class="hljs-keyword">const</span> formIt = <span class="hljs-title class_">Form</span>.<span class="hljs-title function_">useForm</span>()\n  <span class="hljs-keyword">const</span> [, forceUpdate] = react.<span class="hljs-title function_">useState</span>({})\n  <span class="hljs-comment">// 注册不能回调函数设置必填的提示文案</span>\n  react.<span class="hljs-title function_">useEffect</span>(<span class="hljs-function">() =&gt;</span> {\n    formIt.<span class="hljs-title function_">registerRequiredMessageCallback</span>(<span class="hljs-function">(<span class="hljs-params">label</span>) =&gt;</span> {\n      <span class="hljs-keyword">return</span> <span class="hljs-string">::::_QA<span class="hljs-subst">::::_ABlabel}</span>真的不能为空啊::::_QA</span>\n    })\n\n    <span class="hljs-comment">// setTimeout(() =&gt; {</span>\n    formIt.<span class="hljs-title function_">setErrorMessage</span>(<span class="hljs-string">&#x27;userName&#x27;</span>, <span class="hljs-string">&#x27;这是自定义错误xxxxx&#x27;</span>)\n    <span class="hljs-comment">// }, 1000)</span>\n  }, [])\n\n  <span class="hljs-keyword">const</span> <span class="hljs-title function_">handleClick</span> = (<span class="hljs-params"></span>) =&gt; {\n    formIt.<span class="hljs-title function_">validateFields</span>(<span class="hljs-function">(<span class="hljs-params">errorMessage, fieldValues</span>) =&gt;</span> {\n      <span class="hljs-keyword">if</span> (errorMessage &amp;&amp; errorMessage.<span class="hljs-property">length</span>) {\n        <span class="hljs-title class_">Dialog</span>.<span class="hljs-title function_">alert</span>({\n          <span class="hljs-attr">message</span>: <span class="hljs-string">::::_QAerrorMessage: <span class="hljs-subst">::::_AB<span class="hljs-built_in">JSON</span>.stringify(errorMessage)}</span>::::_QA</span>,\n          <span class="hljs-attr">selector</span>: <span class="hljs-string">&#x27;#form-demo11&#x27;</span>,\n        })\n        <span class="hljs-keyword">return</span> <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">info</span>(<span class="hljs-string">&#x27;errorMessage&#x27;</span>, errorMessage)\n      }\n\n      <span class="hljs-title class_">Dialog</span>.<span class="hljs-title function_">alert</span>({\n        <span class="hljs-attr">message</span>: <span class="hljs-string">::::_QAresult: <span class="hljs-subst">::::_AB<span class="hljs-built_in">JSON</span>.stringify(fieldValues)}</span>::::_QA</span>,\n        <span class="hljs-attr">selector</span>: <span class="hljs-string">&#x27;#form-demo11&#x27;</span>,\n      })\n    })\n  }\n  <span class="hljs-comment">// @ts-ignore</span>\n  <span class="hljs-keyword">const</span> dynamicRule = react.<span class="hljs-title function_">useMemo</span>(<span class="hljs-function">() =&gt;</span> {\n    <span class="hljs-keyword">if</span> (formIt.<span class="hljs-title function_">getFieldValue</span>(<span class="hljs-string">&#x27;singleSelect&#x27;</span>) === <span class="hljs-string">&#x27;1&#x27;</span>) {\n      <span class="hljs-keyword">return</span> {\n        <span class="hljs-attr">rule</span>: <span class="hljs-regexp">/^[1-9]d{5}(18|19|([23]d))d{2}((0[1-9])|(10|11|12))(([0-2][1-9])|10|20|30|31)d{3}[0-9Xx]$/</span>,\n        <span class="hljs-attr">message</span>: <span class="hljs-string">&#x27;输入正确的身份证&#x27;</span>,\n      }\n    }\n\n    <span class="hljs-keyword">if</span> (formIt.<span class="hljs-title function_">getFieldValue</span>(<span class="hljs-string">&#x27;singleSelect&#x27;</span>) === <span class="hljs-string">&#x27;2&#x27;</span>) {\n      <span class="hljs-keyword">return</span> {\n        <span class="hljs-attr">rule</span>: <span class="hljs-regexp">/^[0-9]{6}$/</span>,\n        <span class="hljs-attr">message</span>: <span class="hljs-string">&#x27;请输入6位数的驾驶证&#x27;</span>,\n      }\n    }\n  }, [formIt.<span class="hljs-title function_">getFieldValue</span>(<span class="hljs-string">&#x27;singleSelect&#x27;</span>)])\n\n  <span class="hljs-keyword">const</span> dynamicPlaceHolder = react.<span class="hljs-title function_">useMemo</span>(<span class="hljs-function">() =&gt;</span> {\n    <span class="hljs-keyword">if</span> (formIt.<span class="hljs-title function_">getFieldValue</span>(<span class="hljs-string">&#x27;singleSelect&#x27;</span>) === <span class="hljs-string">&#x27;1&#x27;</span>) {\n      <span class="hljs-keyword">return</span> <span class="hljs-string">&#x27;请输入身份证&#x27;</span>\n    }\n\n    <span class="hljs-keyword">if</span> (formIt.<span class="hljs-title function_">getFieldValue</span>(<span class="hljs-string">&#x27;singleSelect&#x27;</span>) === <span class="hljs-string">&#x27;2&#x27;</span>) {\n      <span class="hljs-keyword">return</span> <span class="hljs-string">&#x27;请输入驾驶证&#x27;</span>\n    }\n    <span class="hljs-keyword">return</span> <span class="hljs-string">&#x27;&#x27;</span>\n  }, [formIt.<span class="hljs-title function_">getFieldValue</span>(<span class="hljs-string">&#x27;singleSelect&#x27;</span>)])\n\n  <span class="hljs-keyword">return</span> (\n    <span class="language-xml"><span class="hljs-tag">&lt;&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">Form</span>\n        <span class="hljs-attr">initialValues</span>=<span class="hljs-string">{{</span>\n          <span class="hljs-attr">userName:</span> &#x27;<span class="hljs-attr">我是初始值</span>&#x27;,\n          <span class="hljs-attr">singleSelect:</span> &#x27;<span class="hljs-attr">1</span>&#x27;,\n          <span class="hljs-attr">rate:</span> <span class="hljs-attr">2</span>,\n          <span class="hljs-attr">slider:</span> &#x27;<span class="hljs-attr">50</span>&#x27;,\n        }}\n        <span class="hljs-attr">form</span>=<span class="hljs-string">{formIt}</span>\n        <span class="hljs-attr">onFinish</span>=<span class="hljs-string">{(errs,</span> <span class="hljs-attr">res</span>) =&gt;</span> console.info(errs, res)}\n      &gt;\n        <span class="hljs-tag">&lt;<span class="hljs-name">FormItem</span>\n          <span class="hljs-attr">label</span>=<span class="hljs-string">&quot;用户名&quot;</span>\n          <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;userName&quot;</span>\n          <span class="hljs-attr">required</span>\n          <span class="hljs-attr">rules</span>=<span class="hljs-string">{{</span>\n            <span class="hljs-attr">rule:</span> /[<span class="hljs-attr">u4e00-</span><span class="hljs-attr">u9fa5</span>]/,\n            <span class="hljs-attr">message:</span> &#x27;<span class="hljs-attr">用户名仅支持中文</span>&#x27;,\n          }}\n          <span class="hljs-attr">trigger</span>=<span class="hljs-string">&quot;onInput&quot;</span>\n          <span class="hljs-attr">validateTrigger</span>=<span class="hljs-string">&quot;onBlur&quot;</span>\n          // <span class="hljs-attr">taro的input的onInput事件返回对应表单的最终值为e.detail.value</span>\n          <span class="hljs-attr">valueFormat</span>=<span class="hljs-string">{(e)</span> =&gt;</span> e.detail.value}\n          renderRight={<span class="hljs-tag">&lt;<span class="hljs-name">Icon</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;user-o&quot;</span> /&gt;</span>}\n        &gt;\n          <span class="hljs-tag">&lt;<span class="hljs-name">Input</span> <span class="hljs-attr">placeholder</span>=<span class="hljs-string">&quot;请输入用户名（中文）&quot;</span> /&gt;</span>\n        <span class="hljs-tag">&lt;/<span class="hljs-name">FormItem</span>&gt;</span>\n\n        <span class="hljs-tag">&lt;<span class="hljs-name">FormItem</span> <span class="hljs-attr">label</span>=<span class="hljs-string">&quot;是否打开&quot;</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;opened&quot;</span> <span class="hljs-attr">valueKey</span>=<span class="hljs-string">&quot;checked&quot;</span>&gt;</span>\n          <span class="hljs-tag">&lt;<span class="hljs-name">Switch</span> <span class="hljs-attr">activeColor</span>=<span class="hljs-string">&quot;#07c160&quot;</span> <span class="hljs-attr">inactiveColor</span>=<span class="hljs-string">&quot;#07c160&quot;</span> /&gt;</span>\n        <span class="hljs-tag">&lt;/<span class="hljs-name">FormItem</span>&gt;</span>\n\n        <span class="hljs-tag">&lt;<span class="hljs-name">FormItem</span> <span class="hljs-attr">label</span>=<span class="hljs-string">&quot;证件类型&quot;</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;singleSelect&quot;</span>&gt;</span>\n          {/** 后续版本, 开发 FormItem.dependencies, 实现不需要 forceUpdate 来更新 getFieldValue(&#x27;xx&#x27;) */}\n          <span class="hljs-tag">&lt;<span class="hljs-name">RadioGroup</span>\n            <span class="hljs-attr">direction</span>=<span class="hljs-string">&quot;horizontal&quot;</span>\n            <span class="hljs-attr">onChange</span>=<span class="hljs-string">{(e)</span> =&gt;</span> {\n              formIt.setFieldsValue(&#x27;cardId&#x27;, &#x27;&#x27;)\n              forceUpdate(e)\n            }}\n          &gt;\n            <span class="hljs-tag">&lt;<span class="hljs-name">Radio</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;1&quot;</span> <span class="hljs-attr">checkedColor</span>=<span class="hljs-string">&quot;#07c160&quot;</span>&gt;</span>\n              身份证\n            <span class="hljs-tag">&lt;/<span class="hljs-name">Radio</span>&gt;</span>\n            <span class="hljs-tag">&lt;<span class="hljs-name">Radio</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;2&quot;</span> <span class="hljs-attr">checkedColor</span>=<span class="hljs-string">&quot;#07c160&quot;</span>&gt;</span>\n              驾驶证\n            <span class="hljs-tag">&lt;/<span class="hljs-name">Radio</span>&gt;</span>\n          <span class="hljs-tag">&lt;/<span class="hljs-name">RadioGroup</span>&gt;</span>\n        <span class="hljs-tag">&lt;/<span class="hljs-name">FormItem</span>&gt;</span>\n\n        <span class="hljs-tag">&lt;<span class="hljs-name">FormItem</span>\n          <span class="hljs-attr">label</span>=<span class="hljs-string">&quot;证件号&quot;</span>\n          <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;cardId&quot;</span>\n          <span class="hljs-attr">required</span>\n          <span class="hljs-attr">valueFormat</span>=<span class="hljs-string">{(e)</span> =&gt;</span> e.detail.value}\n          rules={dynamicRule}\n          trigger=&quot;onInput&quot;\n        &gt;\n          <span class="hljs-tag">&lt;<span class="hljs-name">Input</span> <span class="hljs-attr">placeholder</span>=<span class="hljs-string">{dynamicPlaceHolder}</span> /&gt;</span>\n        <span class="hljs-tag">&lt;/<span class="hljs-name">FormItem</span>&gt;</span>\n\n        <span class="hljs-tag">&lt;<span class="hljs-name">FormItem</span> <span class="hljs-attr">label</span>=<span class="hljs-string">&quot;复选框&quot;</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;muiltSelect&quot;</span>&gt;</span>\n          <span class="hljs-tag">&lt;<span class="hljs-name">CheckboxGroup</span> <span class="hljs-attr">direction</span>=<span class="hljs-string">&quot;horizontal&quot;</span>&gt;</span>\n            <span class="hljs-tag">&lt;<span class="hljs-name">Checkbox</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;1&quot;</span> <span class="hljs-attr">shape</span>=<span class="hljs-string">&quot;square&quot;</span> <span class="hljs-attr">checkedColor</span>=<span class="hljs-string">&quot;#07c160&quot;</span>&gt;</span>\n              复选框 1\n            <span class="hljs-tag">&lt;/<span class="hljs-name">Checkbox</span>&gt;</span>\n            <span class="hljs-tag">&lt;<span class="hljs-name">Checkbox</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;2&quot;</span> <span class="hljs-attr">shape</span>=<span class="hljs-string">&quot;square&quot;</span> <span class="hljs-attr">checkedColor</span>=<span class="hljs-string">&quot;#07c160&quot;</span>&gt;</span>\n              复选框 2\n            <span class="hljs-tag">&lt;/<span class="hljs-name">Checkbox</span>&gt;</span>\n          <span class="hljs-tag">&lt;/<span class="hljs-name">CheckboxGroup</span>&gt;</span>\n        <span class="hljs-tag">&lt;/<span class="hljs-name">FormItem</span>&gt;</span>\n\n        <span class="hljs-tag">&lt;<span class="hljs-name">FormItem</span> <span class="hljs-attr">label</span>=<span class="hljs-string">&quot;滑块选择&quot;</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;slider&quot;</span>&gt;</span>\n          <span class="hljs-tag">&lt;<span class="hljs-name">Slider</span>\n            <span class="hljs-attr">activeColor</span>=<span class="hljs-string">&quot;#07c160&quot;</span>\n            <span class="hljs-attr">style</span>=<span class="hljs-string">{{</span> <span class="hljs-attr">width:</span> &#x27;<span class="hljs-attr">200px</span>&#x27;, <span class="hljs-attr">marginTop:</span> &#x27;<span class="hljs-attr">10px</span>&#x27; }}\n          /&gt;</span>\n        <span class="hljs-tag">&lt;/<span class="hljs-name">FormItem</span>&gt;</span>\n\n        <span class="hljs-tag">&lt;<span class="hljs-name">FormItem</span> <span class="hljs-attr">label</span>=<span class="hljs-string">&quot;评分&quot;</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;rate&quot;</span>&gt;</span>\n          <span class="hljs-tag">&lt;<span class="hljs-name">Rate</span> /&gt;</span>\n        <span class="hljs-tag">&lt;/<span class="hljs-name">FormItem</span>&gt;</span>\n\n        <span class="hljs-tag">&lt;<span class="hljs-name">FormItem</span> <span class="hljs-attr">label</span>=<span class="hljs-string">&quot;步进器&quot;</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;stepper&quot;</span>&gt;</span>\n          <span class="hljs-tag">&lt;<span class="hljs-name">Stepper</span> /&gt;</span>\n        <span class="hljs-tag">&lt;/<span class="hljs-name">FormItem</span>&gt;</span>\n        <span class="hljs-tag">&lt;<span class="hljs-name">Button</span>\n          <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;primary&quot;</span>\n          <span class="hljs-attr">className</span>=<span class="hljs-string">&quot;van-button-submit&quot;</span>\n          <span class="hljs-attr">onClick</span>=<span class="hljs-string">{handleClick}</span>\n          // <span class="hljs-attr">formType</span>=<span class="hljs-string">&quot;submit&quot;</span>\n        &gt;</span>\n          提交\n        <span class="hljs-tag">&lt;/<span class="hljs-name">Button</span>&gt;</span>\n      <span class="hljs-tag">&lt;/<span class="hljs-name">Form</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">Dialog</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;form-demo11&quot;</span> /&gt;</span>\n    <span class="hljs-tag">&lt;/&gt;</span></span>\n  )\n}\n\n</code></pre>\n</div>\n  </div>\n  </div>\n</div><div class="card"><h3 id="%E6%94%AF%E6%8C%81%E5%A4%9A%E5%B1%82%E7%BA%A7%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84"><svg viewBox="0 0 1024 1024"  width="14" height="14"><path d="M491.054545 779.636364l-125.672727 125.672727c-32.581818 32.581818-76.8 51.2-123.345454 51.2s-90.763636-18.618182-123.345455-51.2c-67.490909-67.490909-67.490909-179.2 0-246.690909l223.418182-223.418182c32.581818-32.581818 76.8-51.2 123.345454-51.2s90.763636 18.618182 123.345455 51.2c13.963636 13.963636 34.909091 13.963636 46.545455 0 13.963636-13.963636 13.963636-34.909091 0-46.545455-93.090909-93.090909-246.690909-93.090909-342.109091 0L69.818182 612.072727c-46.545455 46.545455-69.818182 107.054545-69.818182 169.890909C0 847.127273 25.6 907.636364 69.818182 954.181818c46.545455 46.545455 109.381818 69.818182 169.890909 69.818182 62.836364 0 123.345455-23.272727 169.890909-69.818182l125.672727-125.672727c13.963636-13.963636 13.963636-34.909091 0-46.545455-9.309091-16.290909-30.254545-16.290909-44.218182-2.327272z" p-id="2808"></path><path d="M954.181818 69.818182c-93.090909-93.090909-246.690909-93.090909-342.109091 0l-125.672727 125.672727c-13.963636 13.963636-13.963636 34.909091 0 46.545455 13.963636 13.963636 34.909091 13.963636 46.545455 0L658.618182 116.363636c32.581818-32.581818 76.8-51.2 123.345454-51.2s90.763636 18.618182 123.345455 51.2c67.490909 67.490909 67.490909 179.2 0 246.690909l-223.418182 223.418182c-32.581818 32.581818-76.8 51.2-123.345454 51.2s-90.763636-18.618182-123.345455-51.2c-13.963636-13.963636-34.909091-13.963636-46.545455 0-13.963636 13.963636-13.963636 34.909091 0 46.545455 46.545455 46.545455 109.381818 69.818182 169.89091 69.818182 62.836364 0 123.345455-23.272727 169.890909-69.818182l223.418181-223.418182c46.545455-46.545455 69.818182-107.054545 69.818182-169.890909C1024 176.872727 998.4 116.363636 954.181818 69.818182z" p-id="2809"></path></svg>支持多层级数据结构</h3>\n<ul>\n<li>FormItem 的 name 属性支持数组的形式, 数组项为字符串的时候挂载到对象上，为数字的时候挂载到数组上\n第一层固定为对象</li>\n<li>表单组件默认仅支持基本数据类型(string、number、boolean...)，FormItem 开启 mutiLevel，保持非基本数据类型</li>\n</ul>\n<p>案例如下：</p>\n  <div class="demo-code-show" id="form__demo2_wrapper">\n  <div class="code-box">\n <div class="demo-code-tabs"><div class="code-tab-name code-tab-name-active" id="name0">demo2.tsx</div>\n<div class="copy-code-btn"></div></div>\n<div class="code-item code-item0">\n<pre><code class="language-tsx"><span class="hljs-comment">/* eslint-disable */</span>\n<span class="hljs-keyword">import</span> react <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;react&#x27;</span>\n<span class="hljs-keyword">import</span> { <span class="hljs-title class_">Input</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@tarojs/components&#x27;</span>\n<span class="hljs-keyword">import</span> {\n  <span class="hljs-title class_">FormItem</span>,\n  <span class="hljs-title class_">Form</span>,\n  <span class="hljs-title class_">Button</span>,\n  <span class="hljs-title class_">Dialog</span>,\n  <span class="hljs-title class_">IFormInstanceAPI</span>,\n} <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@antmjs/vantui&#x27;</span>\n\n<span class="hljs-comment">// 可以异步请求初始化，放在state里面</span>\n<span class="hljs-keyword">const</span> initialValues = {\n  <span class="hljs-attr">mutiData</span>: { <span class="hljs-attr">a</span>: [<span class="hljs-number">1</span>, <span class="hljs-number">2</span>, <span class="hljs-number">3</span>, <span class="hljs-number">4</span>] },\n  <span class="hljs-attr">useInfo</span>: [\n    {\n      <span class="hljs-attr">name</span>: <span class="hljs-string">&#x27;bbbb&#x27;</span>,\n      <span class="hljs-attr">age</span>: <span class="hljs-number">12</span>,\n    },\n    {\n      <span class="hljs-attr">name</span>: <span class="hljs-string">&#x27;aaaa&#x27;</span>,\n      <span class="hljs-attr">age</span>: <span class="hljs-number">13</span>,\n    },\n  ],\n}\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> <span class="hljs-keyword">function</span> <span class="hljs-title function_">Demo</span>(<span class="hljs-params"></span>) {\n  <span class="hljs-keyword">const</span> formIt = react.<span class="hljs-property">useRef</span>&lt;<span class="hljs-title class_">IFormInstanceAPI</span>&gt;(<span class="hljs-literal">null</span>)\n\n  <span class="hljs-keyword">const</span> multFormItems = <span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) {\n    <span class="hljs-keyword">let</span> <span class="hljs-attr">jsx</span>: <span class="hljs-variable constant_">JSX</span>.<span class="hljs-property">Element</span>[] = []\n    <span class="hljs-keyword">for</span> (<span class="hljs-keyword">let</span> i = <span class="hljs-number">0</span>; i &lt; <span class="hljs-number">2</span>; i++) {\n      jsx.<span class="hljs-title function_">push</span>(\n        <span class="language-xml"><span class="hljs-tag">&lt;&gt;</span>\n          <span class="hljs-tag">&lt;<span class="hljs-name">FormItem</span>\n            <span class="hljs-attr">label</span>=<span class="hljs-string">{</span>::::_QA<span class="hljs-attr">名称</span>(::::_AB<span class="hljs-attr">i</span> + <span class="hljs-attr">1</span>})::::_QA}\n            <span class="hljs-attr">name</span>=<span class="hljs-string">{[</span>&#x27;<span class="hljs-attr">useInfo</span>&#x27;, <span class="hljs-attr">i</span>, &#x27;<span class="hljs-attr">name</span>&#x27;]}\n            <span class="hljs-attr">trigger</span>=<span class="hljs-string">&quot;onInput&quot;</span>\n            <span class="hljs-attr">valueFormat</span>=<span class="hljs-string">{(e)</span> =&gt;</span> e.detail.value}\n          &gt;\n            <span class="hljs-tag">&lt;<span class="hljs-name">Input</span> <span class="hljs-attr">placeholder</span>=<span class="hljs-string">&quot;请输入用户名&quot;</span> /&gt;</span>\n          <span class="hljs-tag">&lt;/<span class="hljs-name">FormItem</span>&gt;</span>\n          <span class="hljs-tag">&lt;<span class="hljs-name">FormItem</span>\n            <span class="hljs-attr">label</span>=<span class="hljs-string">{</span>::::_QA<span class="hljs-attr">年龄</span>(::::_AB<span class="hljs-attr">i</span> + <span class="hljs-attr">1</span>})::::_QA}\n            <span class="hljs-attr">name</span>=<span class="hljs-string">{[</span>&#x27;<span class="hljs-attr">useInfo</span>&#x27;, <span class="hljs-attr">i</span>, &#x27;<span class="hljs-attr">age</span>&#x27;]}\n            <span class="hljs-attr">trigger</span>=<span class="hljs-string">&quot;onInput&quot;</span>\n            <span class="hljs-attr">valueFormat</span>=<span class="hljs-string">{(e)</span> =&gt;</span> e.detail.value}\n          &gt;\n            <span class="hljs-tag">&lt;<span class="hljs-name">Input</span> <span class="hljs-attr">placeholder</span>=<span class="hljs-string">&quot;请输入年龄&quot;</span> /&gt;</span>\n          <span class="hljs-tag">&lt;/<span class="hljs-name">FormItem</span>&gt;</span>\n        <span class="hljs-tag">&lt;/&gt;</span></span>,\n      )\n    }\n    <span class="hljs-keyword">return</span> jsx\n  }\n\n  <span class="hljs-keyword">return</span> (\n    <span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">Form</span> <span class="hljs-attr">ref</span>=<span class="hljs-string">{formIt}</span> <span class="hljs-attr">initialValues</span>=<span class="hljs-string">{initialValues}</span>&gt;</span>\n      {multFormItems()}\n      <span class="hljs-tag">&lt;<span class="hljs-name">FormItem</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;mutiData&quot;</span> <span class="hljs-attr">mutiLevel</span> <span class="hljs-attr">label</span>=<span class="hljs-string">&quot;复杂数据&quot;</span>&gt;</span>\n        <span class="hljs-tag">&lt;<span class="hljs-name">_MutiData</span> /&gt;</span>\n      <span class="hljs-tag">&lt;/<span class="hljs-name">FormItem</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">Button</span>\n        <span class="hljs-attr">className</span>=<span class="hljs-string">&quot;van-button-submit&quot;</span>\n        <span class="hljs-attr">formType</span>=<span class="hljs-string">&quot;submit&quot;</span>\n        <span class="hljs-attr">onClick</span>=<span class="hljs-string">{()</span> =&gt;</span> {\n          Dialog.alert({\n            message: ::::_QAresult: ::::_ABJSON.stringify(\n              formIt.current?.getFieldsValue(),\n            )}::::_QA,\n            selector: &#x27;form-demo3&#x27;,\n          })\n        }}\n      &gt;\n        提交\n      <span class="hljs-tag">&lt;/<span class="hljs-name">Button</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">Dialog</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;form-demo3&quot;</span> /&gt;</span>\n    <span class="hljs-tag">&lt;/<span class="hljs-name">Form</span>&gt;</span></span>\n  )\n}\n\n<span class="hljs-keyword">function</span> <span class="hljs-title function_">_MutiData</span>(<span class="hljs-params">value</span>) {\n  <span class="hljs-keyword">return</span> <span class="language-xml"><span class="hljs-tag">&lt;&gt;</span>{JSON.stringify(value)}<span class="hljs-tag">&lt;/&gt;</span></span>\n}\n\n</code></pre>\n</div>\n  </div>\n  </div>\n</div><div class="card"><h3 id="%E5%BC%82%E6%AD%A5%E5%A4%84%E7%90%86%E5%92%8C%E8%87%AA%E5%AE%9A%E4%B9%89%E6%A0%A1%E9%AA%8C"><svg viewBox="0 0 1024 1024"  width="14" height="14"><path d="M491.054545 779.636364l-125.672727 125.672727c-32.581818 32.581818-76.8 51.2-123.345454 51.2s-90.763636-18.618182-123.345455-51.2c-67.490909-67.490909-67.490909-179.2 0-246.690909l223.418182-223.418182c32.581818-32.581818 76.8-51.2 123.345454-51.2s90.763636 18.618182 123.345455 51.2c13.963636 13.963636 34.909091 13.963636 46.545455 0 13.963636-13.963636 13.963636-34.909091 0-46.545455-93.090909-93.090909-246.690909-93.090909-342.109091 0L69.818182 612.072727c-46.545455 46.545455-69.818182 107.054545-69.818182 169.890909C0 847.127273 25.6 907.636364 69.818182 954.181818c46.545455 46.545455 109.381818 69.818182 169.890909 69.818182 62.836364 0 123.345455-23.272727 169.890909-69.818182l125.672727-125.672727c13.963636-13.963636 13.963636-34.909091 0-46.545455-9.309091-16.290909-30.254545-16.290909-44.218182-2.327272z" p-id="2808"></path><path d="M954.181818 69.818182c-93.090909-93.090909-246.690909-93.090909-342.109091 0l-125.672727 125.672727c-13.963636 13.963636-13.963636 34.909091 0 46.545455 13.963636 13.963636 34.909091 13.963636 46.545455 0L658.618182 116.363636c32.581818-32.581818 76.8-51.2 123.345454-51.2s90.763636 18.618182 123.345455 51.2c67.490909 67.490909 67.490909 179.2 0 246.690909l-223.418182 223.418182c-32.581818 32.581818-76.8 51.2-123.345454 51.2s-90.763636-18.618182-123.345455-51.2c-13.963636-13.963636-34.909091-13.963636-46.545455 0-13.963636 13.963636-13.963636 34.909091 0 46.545455 46.545455 46.545455 109.381818 69.818182 169.89091 69.818182 62.836364 0 123.345455-23.272727 169.890909-69.818182l223.418181-223.418182c46.545455-46.545455 69.818182-107.054545 69.818182-169.890909C1024 176.872727 998.4 116.363636 954.181818 69.818182z" p-id="2809"></path></svg>异步处理和自定义校验</h3>\n<ul>\n<li>Uploader 的 onAfterRead 事件只返回变更的文件，展示的是多个文件的话需要重新设置</li>\n<li>异步操作的时候返回 Promise</li>\n</ul>\n<p>案例如下：</p>\n  <div class="demo-code-show" id="form__demo3_wrapper">\n  <div class="code-box">\n <div class="demo-code-tabs"><div class="code-tab-name code-tab-name-active" id="name0">demo3.tsx</div>\n<div class="copy-code-btn"></div></div>\n<div class="code-item code-item0">\n<pre><code class="language-tsx"><span class="hljs-comment">/* eslint-disable */</span>\n<span class="hljs-keyword">import</span> react <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;react&#x27;</span>\n<span class="hljs-keyword">import</span> {\n  <span class="hljs-title class_">Toast</span>,\n  <span class="hljs-title class_">Form</span>,\n  <span class="hljs-title class_">FormItem</span>,\n  <span class="hljs-title class_">Uploader</span>,\n  <span class="hljs-title class_">IFormInstanceAPI</span>,\n} <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@antmjs/vantui&#x27;</span>\n\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> <span class="hljs-keyword">function</span> <span class="hljs-title function_">Demo</span>(<span class="hljs-params"></span>) {\n  <span class="hljs-keyword">const</span> formIt = react.<span class="hljs-property">useRef</span>&lt;<span class="hljs-title class_">IFormInstanceAPI</span>&gt;(<span class="hljs-literal">null</span>)\n\n  <span class="hljs-keyword">const</span> <span class="hljs-title function_">valueFormatUpload</span> = (<span class="hljs-params">event, formName, instance</span>) =&gt; {\n    <span class="hljs-title class_">Toast</span>.<span class="hljs-title function_">loading</span>(<span class="hljs-string">&#x27;上传中...&#x27;</span>)\n    <span class="hljs-keyword">const</span> { file } = event.<span class="hljs-property">detail</span>\n    <span class="hljs-keyword">let</span> fileList = instance.<span class="hljs-title function_">getFieldValue</span>(formName) || []\n    fileList = fileList.<span class="hljs-title function_">concat</span>(file)\n    <span class="hljs-comment">// 异步更新</span>\n    <span class="hljs-keyword">return</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">Promise</span>(<span class="hljs-function">(<span class="hljs-params">resolve</span>) =&gt;</span> {\n      <span class="hljs-built_in">setTimeout</span>(<span class="hljs-function">() =&gt;</span> {\n        <span class="hljs-title class_">Toast</span>.<span class="hljs-title function_">clear</span>()\n        <span class="hljs-title function_">resolve</span>(fileList)\n      }, <span class="hljs-number">3000</span>)\n    })\n  }\n\n  <span class="hljs-keyword">const</span> <span class="hljs-title function_">deleteFile</span> = (<span class="hljs-params">event</span>) =&gt; {\n    <span class="hljs-keyword">const</span> { index, fileList } = event.<span class="hljs-property">detail</span>\n    fileList.<span class="hljs-title function_">splice</span>(index, <span class="hljs-number">1</span>)\n\n    formIt.<span class="hljs-property">current</span>?.<span class="hljs-title function_">setFieldsValue</span>(<span class="hljs-string">&#x27;file&#x27;</span>, fileList)\n  }\n  <span class="hljs-keyword">return</span> (\n    <span class="language-xml"><span class="hljs-tag">&lt;&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">Toast</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;form-demo2-loading&quot;</span> /&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">Form</span> <span class="hljs-attr">ref</span>=<span class="hljs-string">{formIt}</span>&gt;</span>\n        <span class="hljs-tag">&lt;<span class="hljs-name">FormItem</span>\n          <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;file&quot;</span>\n          <span class="hljs-attr">required</span>\n          <span class="hljs-attr">layout</span>=<span class="hljs-string">&quot;vertical&quot;</span>\n          <span class="hljs-attr">label</span>=<span class="hljs-string">&quot;上传图片(图片大小不得大于 0.1M)&quot;</span>\n          <span class="hljs-attr">valueKey</span>=<span class="hljs-string">&quot;fileList&quot;</span>\n          <span class="hljs-attr">valueFormat</span>=<span class="hljs-string">{valueFormatUpload}</span>\n          <span class="hljs-attr">trigger</span>=<span class="hljs-string">&quot;onAfterRead&quot;</span>\n          <span class="hljs-attr">validateTrigger</span>=<span class="hljs-string">&quot;onAfterRead&quot;</span>\n          <span class="hljs-attr">rules</span>=<span class="hljs-string">{{</span>\n            <span class="hljs-attr">rule:</span> (<span class="hljs-attr">values</span>, <span class="hljs-attr">call</span>) =&gt;</span> {\n              values.forEach((item, index) =&gt; {\n                if (item.size &gt; 0.1 * 1024 * 1024) {\n                  return call(::::_QA图片(::::_ABindex + 1})大小不得大于 0.1M::::_QA)\n                }\n                call(&#x27;&#x27;)\n              })\n            },\n          }}\n        &gt;\n          <span class="hljs-tag">&lt;<span class="hljs-name">Uploader</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;file1&quot;</span> <span class="hljs-attr">onDelete</span>=<span class="hljs-string">{deleteFile}</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">Uploader</span>&gt;</span>\n        <span class="hljs-tag">&lt;/<span class="hljs-name">FormItem</span>&gt;</span>\n      <span class="hljs-tag">&lt;/<span class="hljs-name">Form</span>&gt;</span>\n    <span class="hljs-tag">&lt;/&gt;</span></span>\n  )\n}\n\n</code></pre>\n</div>\n  </div>\n  </div>\n</div><div class="card"><h3 id="%E8%87%AA%E5%AE%9A%E4%B9%89%E7%BB%84%E4%BB%B6"><svg viewBox="0 0 1024 1024"  width="14" height="14"><path d="M491.054545 779.636364l-125.672727 125.672727c-32.581818 32.581818-76.8 51.2-123.345454 51.2s-90.763636-18.618182-123.345455-51.2c-67.490909-67.490909-67.490909-179.2 0-246.690909l223.418182-223.418182c32.581818-32.581818 76.8-51.2 123.345454-51.2s90.763636 18.618182 123.345455 51.2c13.963636 13.963636 34.909091 13.963636 46.545455 0 13.963636-13.963636 13.963636-34.909091 0-46.545455-93.090909-93.090909-246.690909-93.090909-342.109091 0L69.818182 612.072727c-46.545455 46.545455-69.818182 107.054545-69.818182 169.890909C0 847.127273 25.6 907.636364 69.818182 954.181818c46.545455 46.545455 109.381818 69.818182 169.890909 69.818182 62.836364 0 123.345455-23.272727 169.890909-69.818182l125.672727-125.672727c13.963636-13.963636 13.963636-34.909091 0-46.545455-9.309091-16.290909-30.254545-16.290909-44.218182-2.327272z" p-id="2808"></path><path d="M954.181818 69.818182c-93.090909-93.090909-246.690909-93.090909-342.109091 0l-125.672727 125.672727c-13.963636 13.963636-13.963636 34.909091 0 46.545455 13.963636 13.963636 34.909091 13.963636 46.545455 0L658.618182 116.363636c32.581818-32.581818 76.8-51.2 123.345454-51.2s90.763636 18.618182 123.345455 51.2c67.490909 67.490909 67.490909 179.2 0 246.690909l-223.418182 223.418182c-32.581818 32.581818-76.8 51.2-123.345454 51.2s-90.763636-18.618182-123.345455-51.2c-13.963636-13.963636-34.909091-13.963636-46.545455 0-13.963636 13.963636-13.963636 34.909091 0 46.545455 46.545455 46.545455 109.381818 69.818182 169.89091 69.818182 62.836364 0 123.345455-23.272727 169.890909-69.818182l223.418181-223.418182c46.545455-46.545455 69.818182-107.054545 69.818182-169.890909C1024 176.872727 998.4 116.363636 954.181818 69.818182z" p-id="2809"></path></svg>自定义组件</h3>\n<p>封装 DatetimePickerBox 组件, 应用到 FormItem</p>\n  <div class="demo-code-show" id="form__demo4_wrapper">\n  <div class="code-box">\n <div class="demo-code-tabs"><div class="code-tab-name code-tab-name-active" id="name0">demo4.tsx</div>\n<div class="copy-code-btn"></div></div>\n<div class="code-item code-item0">\n<pre><code class="language-tsx"><span class="hljs-comment">/* eslint-disable */</span>\n<span class="hljs-keyword">import</span> react <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;react&#x27;</span>\n<span class="hljs-keyword">import</span> { <span class="hljs-title class_">View</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@tarojs/components&#x27;</span>\n<span class="hljs-keyword">import</span> { <span class="hljs-title class_">Form</span>, <span class="hljs-title class_">FormItem</span>, <span class="hljs-title class_">Icon</span>, <span class="hljs-title class_">Popup</span>, <span class="hljs-title class_">DatetimePicker</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@antmjs/vantui&#x27;</span>\n\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> <span class="hljs-keyword">function</span> <span class="hljs-title function_">Demo</span>(<span class="hljs-params"></span>) {\n  <span class="hljs-keyword">const</span> formIt = react.<span class="hljs-title function_">useRef</span>(<span class="hljs-literal">null</span>)\n\n  <span class="hljs-keyword">return</span> (\n    <span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">Form</span> <span class="hljs-attr">ref</span>=<span class="hljs-string">{formIt}</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">FormItem</span>\n        <span class="hljs-attr">label</span>=<span class="hljs-string">&quot;日期选择&quot;</span>\n        <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;dateTime&quot;</span>\n        <span class="hljs-attr">valueFormat</span>=<span class="hljs-string">{(e)</span> =&gt;</span> e.detail.value}\n        valueKey=&quot;value&quot;\n        trigger=&quot;onConfirm&quot;\n        renderRight={<span class="hljs-tag">&lt;<span class="hljs-name">Icon</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;arrow&quot;</span> /&gt;</span>}\n      &gt;\n        <span class="hljs-tag">&lt;<span class="hljs-name">DatetimePickerBox_</span> /&gt;</span>\n      <span class="hljs-tag">&lt;/<span class="hljs-name">FormItem</span>&gt;</span>\n    <span class="hljs-tag">&lt;/<span class="hljs-name">Form</span>&gt;</span></span>\n  )\n}\n\n<span class="hljs-keyword">function</span> <span class="hljs-title function_">DatetimePickerBox_</span>(<span class="hljs-params">props</span>) {\n  <span class="hljs-keyword">const</span> [state, changeState] = react.<span class="hljs-title function_">useState</span>({\n    <span class="hljs-attr">show</span>: <span class="hljs-literal">false</span>,\n    <span class="hljs-attr">innerValue</span>: <span class="hljs-literal">null</span>,\n  })\n\n  <span class="hljs-keyword">const</span> setState = react.<span class="hljs-title function_">useCallback</span>(\n    <span class="hljs-function">(<span class="hljs-params">key, value</span>) =&gt;</span> {\n      <span class="hljs-title function_">changeState</span>({\n        ...state,\n        [key]: value,\n      })\n    },\n    [state],\n  )\n\n  <span class="hljs-keyword">const</span> toggleShow = react.<span class="hljs-title function_">useCallback</span>(<span class="hljs-function">(<span class="hljs-params">show</span>) =&gt;</span> {\n    <span class="hljs-title function_">setState</span>(<span class="hljs-string">&#x27;show&#x27;</span>, show)\n  }, [])\n\n  <span class="hljs-keyword">const</span> onConfirm = react.<span class="hljs-title function_">useCallback</span>(<span class="hljs-function">(<span class="hljs-params">e</span>) =&gt;</span> {\n    <span class="hljs-keyword">if</span> (props.<span class="hljs-property">onConfirm</span>) props.<span class="hljs-title function_">onConfirm</span>(e)\n    <span class="hljs-title function_">toggleShow</span>(<span class="hljs-literal">false</span>)\n  }, [])\n\n  <span class="hljs-keyword">const</span> onCancel = react.<span class="hljs-title function_">useCallback</span>(<span class="hljs-function">() =&gt;</span> {\n    <span class="hljs-keyword">if</span> (props.<span class="hljs-property">onCancel</span>) props.<span class="hljs-title function_">onCancel</span>()\n    <span class="hljs-title function_">toggleShow</span>(<span class="hljs-literal">false</span>)\n  }, [])\n\n  <span class="hljs-keyword">const</span> preFixZero = react.<span class="hljs-title function_">useCallback</span>(<span class="hljs-function">(<span class="hljs-params">n</span>) =&gt;</span> {\n    <span class="hljs-keyword">return</span> n &gt; <span class="hljs-number">9</span> ? <span class="hljs-string">::::_QA<span class="hljs-subst">::::_ABn}</span>::::_QA</span> : <span class="hljs-string">::::_QA0<span class="hljs-subst">::::_ABn}</span>::::_QA</span>\n  }, [])\n\n  <span class="hljs-keyword">const</span> formatDate = react.<span class="hljs-title function_">useCallback</span>(<span class="hljs-function">(<span class="hljs-params">date</span>) =&gt;</span> {\n    <span class="hljs-keyword">const</span> d = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Date</span>(date)\n    <span class="hljs-keyword">return</span> <span class="hljs-string">::::_QA<span class="hljs-subst">::::_ABd.getFullYear()}</span>-<span class="hljs-subst">::::_ABpreFixZero(\n      <span class="hljs-built_in">Number</span>(d.getMonth() + <span class="hljs-number">1</span>),\n    )}</span>-<span class="hljs-subst">::::_ABd.getDate()}</span> <span class="hljs-subst">::::_ABd.getHours()}</span>:<span class="hljs-subst">::::_ABd.getMinutes()}</span>::::_QA</span>\n  }, [])\n\n  <span class="hljs-keyword">const</span> { value } = props\n\n  <span class="hljs-keyword">return</span> (\n    <span class="language-xml"><span class="hljs-tag">&lt;&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">View</span> <span class="hljs-attr">onClick</span>=<span class="hljs-string">{()</span> =&gt;</span> toggleShow(true)} style={{ minWidth: &#x27;200px&#x27; }}&gt;\n        {value ? formatDate(value) : &#x27;请选择日期&#x27;}\n      <span class="hljs-tag">&lt;/<span class="hljs-name">View</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">Popup</span>\n        <span class="hljs-attr">position</span>=<span class="hljs-string">&quot;bottom&quot;</span>\n        <span class="hljs-attr">show</span>=<span class="hljs-string">{state.show}</span>\n        <span class="hljs-attr">onClose</span>=<span class="hljs-string">{()</span> =&gt;</span> toggleShow(false)}\n      &gt;\n        <span class="hljs-tag">&lt;<span class="hljs-name">DatetimePicker</span>\n          <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;datetime&quot;</span>\n          <span class="hljs-attr">value</span>=<span class="hljs-string">{state.innerValue</span> || <span class="hljs-attr">value</span>}\n          <span class="hljs-attr">onConfirm</span>=<span class="hljs-string">{onConfirm}</span>\n          <span class="hljs-attr">onCancel</span>=<span class="hljs-string">{onCancel}</span>\n        /&gt;</span>\n      <span class="hljs-tag">&lt;/<span class="hljs-name">Popup</span>&gt;</span>\n    <span class="hljs-tag">&lt;/&gt;</span></span>\n  )\n}\n\n</code></pre>\n</div>\n  </div>\n  </div>\n</div><div class="card"><h3 id="FormProps%20%3Ca%20href%3D%22h"><svg viewBox="0 0 1024 1024"  width="14" height="14"><path d="M491.054545 779.636364l-125.672727 125.672727c-32.581818 32.581818-76.8 51.2-123.345454 51.2s-90.763636-18.618182-123.345455-51.2c-67.490909-67.490909-67.490909-179.2 0-246.690909l223.418182-223.418182c32.581818-32.581818 76.8-51.2 123.345454-51.2s90.763636 18.618182 123.345455 51.2c13.963636 13.963636 34.909091 13.963636 46.545455 0 13.963636-13.963636 13.963636-34.909091 0-46.545455-93.090909-93.090909-246.690909-93.090909-342.109091 0L69.818182 612.072727c-46.545455 46.545455-69.818182 107.054545-69.818182 169.890909C0 847.127273 25.6 907.636364 69.818182 954.181818c46.545455 46.545455 109.381818 69.818182 169.890909 69.818182 62.836364 0 123.345455-23.272727 169.890909-69.818182l125.672727-125.672727c13.963636-13.963636 13.963636-34.909091 0-46.545455-9.309091-16.290909-30.254545-16.290909-44.218182-2.327272z" p-id="2808"></path><path d="M954.181818 69.818182c-93.090909-93.090909-246.690909-93.090909-342.109091 0l-125.672727 125.672727c-13.963636 13.963636-13.963636 34.909091 0 46.545455 13.963636 13.963636 34.909091 13.963636 46.545455 0L658.618182 116.363636c32.581818-32.581818 76.8-51.2 123.345454-51.2s90.763636 18.618182 123.345455 51.2c67.490909 67.490909 67.490909 179.2 0 246.690909l-223.418182 223.418182c-32.581818 32.581818-76.8 51.2-123.345454 51.2s-90.763636-18.618182-123.345455-51.2c-13.963636-13.963636-34.909091-13.963636-46.545455 0-13.963636 13.963636-13.963636 34.909091 0 46.545455 46.545455 46.545455 109.381818 69.818182 169.89091 69.818182 62.836364 0 123.345455-23.272727 169.890909-69.818182l223.418181-223.418182c46.545455-46.545455 69.818182-107.054545 69.818182-169.890909C1024 176.872727 998.4 116.363636 954.181818 69.818182z" p-id="2809"></path></svg>FormProps <a href="https://github.com/AntmJS/vantui/tree/main/packages/vantui/types/form.d.ts">[详情]</a></h3>\n<table>\n<thead>\n<tr>\n<th>参数</th>\n<th>说明</th>\n<th>类型</th>\n<th>默认值</th>\n<th>必填</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>form</td>\n<td>传入 form 实例（const formStore1 = useRef()）</td>\n<td><em>  IFormInstanceAPI<br/></em></td>\n<td>-</td>\n<td><code>false</code></td>\n</tr>\n<tr>\n<td>initialValues</td>\n<td>初始化表单仓库值</td>\n<td><em>  Record&lt;<br/>    string,<br/>    any<br/>  &gt;<br/></em></td>\n<td>-</td>\n<td><code>false</code></td>\n</tr>\n<tr>\n<td>children</td>\n<td>第一级必须是 FormItem 组件</td>\n<td><em>  ReactNode<br/></em></td>\n<td>-</td>\n<td><code>true</code></td>\n</tr>\n<tr>\n<td>className</td>\n<td>类名</td>\n<td><em>  string<br/></em></td>\n<td>-</td>\n<td><code>false</code></td>\n</tr>\n<tr>\n<td>onFinish</td>\n<td>表单提交触发，配合 button.formType = submit</td>\n<td><em>  (<br/>    errs: string[] ¦ null,<br/>    values: Record&lt;<br/>      string,<br/>      any<br/>    &gt;<br/>  ) =&gt; void<br/></em></td>\n<td>-</td>\n<td><code>false</code></td>\n</tr>\n<tr>\n<td>onFinishFailed</td>\n<td>表单提交失败触发，会拦截 onFinish</td>\n<td><em>  (<br/>    errs: string[] ¦ null<br/>  ) =&gt; void<br/></em></td>\n<td>-</td>\n<td><code>false</code></td>\n</tr>\n<tr>\n<td>onChange</td>\n<td>字段值更新时触发的回调事件</td>\n<td><em>  (<br/>    changedValues: Record&lt;<br/>      string,<br/>      any<br/>    &gt;,<br/>    allValues: Record&lt;<br/>      string,<br/>      any<br/>    &gt;<br/>  ) =&gt; void<br/></em></td>\n<td>-</td>\n<td><code>false</code></td>\n</tr>\n</tbody>\n</table>\n</div><div class="card"><h3 id="FormItemProps%20%3Ca%20hre"><svg viewBox="0 0 1024 1024"  width="14" height="14"><path d="M491.054545 779.636364l-125.672727 125.672727c-32.581818 32.581818-76.8 51.2-123.345454 51.2s-90.763636-18.618182-123.345455-51.2c-67.490909-67.490909-67.490909-179.2 0-246.690909l223.418182-223.418182c32.581818-32.581818 76.8-51.2 123.345454-51.2s90.763636 18.618182 123.345455 51.2c13.963636 13.963636 34.909091 13.963636 46.545455 0 13.963636-13.963636 13.963636-34.909091 0-46.545455-93.090909-93.090909-246.690909-93.090909-342.109091 0L69.818182 612.072727c-46.545455 46.545455-69.818182 107.054545-69.818182 169.890909C0 847.127273 25.6 907.636364 69.818182 954.181818c46.545455 46.545455 109.381818 69.818182 169.890909 69.818182 62.836364 0 123.345455-23.272727 169.890909-69.818182l125.672727-125.672727c13.963636-13.963636 13.963636-34.909091 0-46.545455-9.309091-16.290909-30.254545-16.290909-44.218182-2.327272z" p-id="2808"></path><path d="M954.181818 69.818182c-93.090909-93.090909-246.690909-93.090909-342.109091 0l-125.672727 125.672727c-13.963636 13.963636-13.963636 34.909091 0 46.545455 13.963636 13.963636 34.909091 13.963636 46.545455 0L658.618182 116.363636c32.581818-32.581818 76.8-51.2 123.345454-51.2s90.763636 18.618182 123.345455 51.2c67.490909 67.490909 67.490909 179.2 0 246.690909l-223.418182 223.418182c-32.581818 32.581818-76.8 51.2-123.345454 51.2s-90.763636-18.618182-123.345455-51.2c-13.963636-13.963636-34.909091-13.963636-46.545455 0-13.963636 13.963636-13.963636 34.909091 0 46.545455 46.545455 46.545455 109.381818 69.818182 169.89091 69.818182 62.836364 0 123.345455-23.272727 169.890909-69.818182l223.418181-223.418182c46.545455-46.545455 69.818182-107.054545 69.818182-169.890909C1024 176.872727 998.4 116.363636 954.181818 69.818182z" p-id="2809"></path></svg>FormItemProps <a href="https://github.com/AntmJS/vantui/tree/main/packages/vantui/types/form.d.ts">[详情]</a></h3>\n<table>\n<thead>\n<tr>\n<th>参数</th>\n<th>说明</th>\n<th>类型</th>\n<th>默认值</th>\n<th>必填</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>mutiLevel</td>\n<td>组件值默认数据类型为基本类型(string、number...), 对象数组形式的数据需要设置为 true</td>\n<td><em>  boolean<br/></em></td>\n<td>-</td>\n<td><code>false</code></td>\n</tr>\n<tr>\n<td>name</td>\n<td>对应表单字段名</td>\n<td><em>  attr:<br/>    ¦ string<br/>    ¦ Array&lt;<br/>        string ¦ number<br/>      &gt;<br/></em></td>\n<td>-</td>\n<td><code>true</code></td>\n</tr>\n<tr>\n<td>children</td>\n<td>第一级操作表单组件</td>\n<td><em>  ReactNode<br/></em></td>\n<td>-</td>\n<td><code>true</code></td>\n</tr>\n<tr>\n<td>label</td>\n<td>表单 label</td>\n<td><em>  ReactNode<br/></em></td>\n<td>-</td>\n<td><code>true</code></td>\n</tr>\n<tr>\n<td>labelName</td>\n<td>表单 label 字符串, 当 label 不为字符串的时候，传入 labelName</td>\n<td><em>  string<br/></em></td>\n<td>-</td>\n<td><code>false</code></td>\n</tr>\n<tr>\n<td>layout</td>\n<td>垂直 ｜ 水平</td>\n<td><em>  attr:<br/>    ¦ &quot;vertical&quot;<br/>    ¦ &quot;horizontal&quot;<br/></em></td>\n<td>horizontal</td>\n<td><code>false</code></td>\n</tr>\n<tr>\n<td>required</td>\n<td>是否必填</td>\n<td><em>  boolean<br/></em></td>\n<td><code>false</code></td>\n<td><code>false</code></td>\n</tr>\n<tr>\n<td>validateTrigger</td>\n<td>验证表单触发方法名</td>\n<td><em>  string<br/></em></td>\n<td><code>onChange</code></td>\n<td><code>false</code></td>\n</tr>\n<tr>\n<td>borderBottom</td>\n<td>下边框</td>\n<td><em>  boolean<br/></em></td>\n<td><code>false</code></td>\n<td><code>false</code></td>\n</tr>\n<tr>\n<td>labelClassName</td>\n<td>label 的外层 className</td>\n<td><em>  string<br/></em></td>\n<td>-</td>\n<td><code>false</code></td>\n</tr>\n<tr>\n<td>messageClassName</td>\n<td>提示信息的 className,某些错误情况可以自定义样式</td>\n<td><em>  string<br/></em></td>\n<td>-</td>\n<td><code>false</code></td>\n</tr>\n<tr>\n<td>requiredClassName</td>\n<td>required 的外层 className</td>\n<td><em>  string<br/></em></td>\n<td>-</td>\n<td><code>false</code></td>\n</tr>\n<tr>\n<td>controllClassName</td>\n<td>表单组件的外层 className</td>\n<td><em>  string<br/></em></td>\n<td>-</td>\n<td><code>false</code></td>\n</tr>\n<tr>\n<td>className</td>\n<td>formItem 最外层 className</td>\n<td><em>  string<br/></em></td>\n<td>-</td>\n<td><code>false</code></td>\n</tr>\n<tr>\n<td>requiredIcon</td>\n<td>自定义必填标识</td>\n<td><em>  ReactNode<br/></em></td>\n<td>-</td>\n<td><code>false</code></td>\n</tr>\n<tr>\n<td>feedback</td>\n<td>验证后反馈的信息，可设置为校验成功、失败、都展示或隐藏</td>\n<td><em>  attr:<br/>    ¦ &quot;success&quot;<br/>    ¦ &quot;failed&quot;<br/>    ¦ &quot;all&quot;<br/>    ¦ &quot;hidden&quot;<br/></em></td>\n<td><code>failed</code></td>\n<td><code>false</code></td>\n</tr>\n<tr>\n<td>renderRight</td>\n<td>自定义渲染右边内容</td>\n<td><em>  ReactNode<br/></em></td>\n<td>-</td>\n<td><code>false</code></td>\n</tr>\n<tr>\n<td>trigger</td>\n<td>表单交互触发方法</td>\n<td><em>  string<br/></em></td>\n<td><code>onChange</code></td>\n<td><code>false</code></td>\n</tr>\n<tr>\n<td>valueKey</td>\n<td>表单控制展示的具体值的字段名</td>\n<td><em>  string<br/></em></td>\n<td><code>value</code></td>\n<td><code>false</code></td>\n</tr>\n<tr>\n<td>valueFormat</td>\n<td>根据表单交互回掉函数（时间）参数的重新定义</td>\n<td><em>  (<br/>    value: any,<br/>    name:<br/>      ¦ string<br/>      ¦ Array&lt;<br/>          string ¦ number<br/>        &gt;,<br/>    IFormInstance: IFormInstanceAPI<br/>  ) =&gt; any<br/></em></td>\n<td><code>value</code></td>\n<td><code>false</code></td>\n</tr>\n<tr>\n<td>rules</td>\n<td>正则校验值，或者自定义校验后 call 回掉函数返回错误信息，支持数组或单项设置</td>\n<td><em>  attr:<br/>    ¦ {<br/>        rule:<br/>          ¦ ((<br/>              value: any,<br/>              call: (<br/>                errMess: string<br/>              ) =&gt; void<br/>            ) =&gt; void)<br/>          ¦ RegExp<br/>        message?: string<br/>      }[]<br/>    ¦ {<br/>        rule:<br/>          ¦ ((<br/>              value: any,<br/>              call: (<br/>                errMess: string<br/>              ) =&gt; void<br/>            ) =&gt; void)<br/>          ¦ RegExp<br/>        message?: string<br/>      }<br/></em></td>\n<td>-</td>\n<td><code>false</code></td>\n</tr>\n</tbody>\n</table>\n</div><div class="card"><h3 id="IFormInstance%20%3Ca%20hre"><svg viewBox="0 0 1024 1024"  width="14" height="14"><path d="M491.054545 779.636364l-125.672727 125.672727c-32.581818 32.581818-76.8 51.2-123.345454 51.2s-90.763636-18.618182-123.345455-51.2c-67.490909-67.490909-67.490909-179.2 0-246.690909l223.418182-223.418182c32.581818-32.581818 76.8-51.2 123.345454-51.2s90.763636 18.618182 123.345455 51.2c13.963636 13.963636 34.909091 13.963636 46.545455 0 13.963636-13.963636 13.963636-34.909091 0-46.545455-93.090909-93.090909-246.690909-93.090909-342.109091 0L69.818182 612.072727c-46.545455 46.545455-69.818182 107.054545-69.818182 169.890909C0 847.127273 25.6 907.636364 69.818182 954.181818c46.545455 46.545455 109.381818 69.818182 169.890909 69.818182 62.836364 0 123.345455-23.272727 169.890909-69.818182l125.672727-125.672727c13.963636-13.963636 13.963636-34.909091 0-46.545455-9.309091-16.290909-30.254545-16.290909-44.218182-2.327272z" p-id="2808"></path><path d="M954.181818 69.818182c-93.090909-93.090909-246.690909-93.090909-342.109091 0l-125.672727 125.672727c-13.963636 13.963636-13.963636 34.909091 0 46.545455 13.963636 13.963636 34.909091 13.963636 46.545455 0L658.618182 116.363636c32.581818-32.581818 76.8-51.2 123.345454-51.2s90.763636 18.618182 123.345455 51.2c67.490909 67.490909 67.490909 179.2 0 246.690909l-223.418182 223.418182c-32.581818 32.581818-76.8 51.2-123.345454 51.2s-90.763636-18.618182-123.345455-51.2c-13.963636-13.963636-34.909091-13.963636-46.545455 0-13.963636 13.963636-13.963636 34.909091 0 46.545455 46.545455 46.545455 109.381818 69.818182 169.89091 69.818182 62.836364 0 123.345455-23.272727 169.890909-69.818182l223.418181-223.418182c46.545455-46.545455 69.818182-107.054545 69.818182-169.890909C1024 176.872727 998.4 116.363636 954.181818 69.818182z" p-id="2809"></path></svg>IFormInstance <a href="https://github.com/AntmJS/vantui/tree/main/packages/vantui/types/form.d.ts">[详情]</a></h3>\n<p>通过 ref 获取到的 form 的实例</p>\n<table>\n<thead>\n<tr>\n<th>方法</th>\n<th>说明</th>\n<th>类型</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>registerValidateFields</td>\n<td>注册校验规则</td>\n<td><em>  (<br/>    name:<br/>      ¦ string<br/>      ¦ Array&lt;<br/>          string ¦ number<br/>        &gt;,<br/>    control: Record&lt;<br/>      string,<br/>      any<br/>    &gt;,<br/>    model: Record&lt;<br/>      string,<br/>      any<br/>    &gt;<br/>  ) =&gt; void<br/></em></td>\n</tr>\n<tr>\n<td>registerRequiredMessageCallback</td>\n<td>注册必填项为空时的回调函数</td>\n<td><em>  (<br/>    callback: (<br/>      label: string<br/>    ) =&gt; string<br/>  ) =&gt; void<br/></em></td>\n</tr>\n<tr>\n<td>unRegisterValidate</td>\n<td>注册校验规则</td>\n<td><em>  (<br/>    name:<br/>      ¦ string<br/>      ¦ Array&lt;<br/>          string ¦ number<br/>        &gt;<br/>  ) =&gt; void<br/></em></td>\n</tr>\n<tr>\n<td>resetFields</td>\n<td>重置表单</td>\n<td><em>  () =&gt; void<br/></em></td>\n</tr>\n<tr>\n<td>setFields</td>\n<td>设置多个表单值</td>\n<td><em>  (<br/>    object: Record&lt;<br/>      string,<br/>      any<br/>    &gt;<br/>  ) =&gt; void<br/></em></td>\n</tr>\n<tr>\n<td>setFieldsValue</td>\n<td>设置单个表单值</td>\n<td><em>  (<br/>    name:<br/>      ¦ string<br/>      ¦ Array&lt;<br/>          string ¦ number<br/>        &gt;,<br/>    modelValue: any<br/>  ) =&gt; any<br/></em></td>\n</tr>\n<tr>\n<td>getFieldsValue</td>\n<td>获取所有表单值</td>\n<td><em>  () =&gt; Record&lt;<br/>    string,<br/>    any<br/>  &gt;<br/></em></td>\n</tr>\n<tr>\n<td>setErrorMessage</td>\n<td>设置表单错误信息</td>\n<td><em>  (<br/>    name:<br/>      ¦ string<br/>      ¦ Array&lt;<br/>          string ¦ number<br/>        &gt;,<br/>    message: string<br/>  ) =&gt; void<br/></em></td>\n</tr>\n<tr>\n<td>getFieldValue</td>\n<td>获取单个表单值</td>\n<td><em>  (<br/>    name:<br/>      ¦ string<br/>      ¦ Array&lt;<br/>          string ¦ number<br/>        &gt;<br/>  ) =&gt; any<br/></em></td>\n</tr>\n<tr>\n<td>validateFieldValue</td>\n<td>单个表单验证</td>\n<td><em>  (<br/>    name: string<br/>  ) =&gt;<br/>    ¦ &quot;resolve&quot;<br/>    ¦ &quot;reject&quot;<br/></em></td>\n</tr>\n<tr>\n<td>validateFields</td>\n<td>校验表单，并获取错误信息和所有表单值</td>\n<td><em>  (<br/>    callback: (<br/>      errorMess: Array<string> ¦ null,<br/>      values: Record&lt;<br/>        string,<br/>        any<br/>      &gt;<br/>    ) =&gt; void<br/>  ) =&gt; void<br/></em></td>\n</tr>\n<tr>\n<td>submit</td>\n<td>校验表单，并获取错误信息和所有表单值，触发 form.onFinish 和 onFinishFailed</td>\n<td><em>  (<br/>    callback?: (<br/>      errs: Array<string> ¦ null,<br/>      values: Record&lt;<br/>        string,<br/>        string<br/>      &gt;<br/>    ) =&gt; void<br/>  ) =&gt; void<br/></em></td>\n</tr>\n</tbody>\n</table>\n</div><div class="card"><h3 id="%E6%A0%B7%E5%BC%8F%E5%8F%98%E9%87%8F"><svg viewBox="0 0 1024 1024"  width="14" height="14"><path d="M491.054545 779.636364l-125.672727 125.672727c-32.581818 32.581818-76.8 51.2-123.345454 51.2s-90.763636-18.618182-123.345455-51.2c-67.490909-67.490909-67.490909-179.2 0-246.690909l223.418182-223.418182c32.581818-32.581818 76.8-51.2 123.345454-51.2s90.763636 18.618182 123.345455 51.2c13.963636 13.963636 34.909091 13.963636 46.545455 0 13.963636-13.963636 13.963636-34.909091 0-46.545455-93.090909-93.090909-246.690909-93.090909-342.109091 0L69.818182 612.072727c-46.545455 46.545455-69.818182 107.054545-69.818182 169.890909C0 847.127273 25.6 907.636364 69.818182 954.181818c46.545455 46.545455 109.381818 69.818182 169.890909 69.818182 62.836364 0 123.345455-23.272727 169.890909-69.818182l125.672727-125.672727c13.963636-13.963636 13.963636-34.909091 0-46.545455-9.309091-16.290909-30.254545-16.290909-44.218182-2.327272z" p-id="2808"></path><path d="M954.181818 69.818182c-93.090909-93.090909-246.690909-93.090909-342.109091 0l-125.672727 125.672727c-13.963636 13.963636-13.963636 34.909091 0 46.545455 13.963636 13.963636 34.909091 13.963636 46.545455 0L658.618182 116.363636c32.581818-32.581818 76.8-51.2 123.345454-51.2s90.763636 18.618182 123.345455 51.2c67.490909 67.490909 67.490909 179.2 0 246.690909l-223.418182 223.418182c-32.581818 32.581818-76.8 51.2-123.345454 51.2s-90.763636-18.618182-123.345455-51.2c-13.963636-13.963636-34.909091-13.963636-46.545455 0-13.963636 13.963636-13.963636 34.909091 0 46.545455 46.545455 46.545455 109.381818 69.818182 169.89091 69.818182 62.836364 0 123.345455-23.272727 169.890909-69.818182l223.418181-223.418182c46.545455-46.545455 69.818182-107.054545 69.818182-169.890909C1024 176.872727 998.4 116.363636 954.181818 69.818182z" p-id="2809"></path></svg>样式变量</h3>\n<p>组件提供了下列 CSS 变量，可用于自定义样式，使用方法请参考<a href="https://antmjs.github.io/vantui/#/config-provider">ConfigProvider 组件</a></p>\n<table>\n<thead>\n<tr>\n<th>名称</th>\n<th>默认值</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>--form-background-color</td>\n<td><code> @white;</code></td>\n</tr>\n<tr>\n<td>--form-space-horizontal</td>\n<td><code> @padding-sm;</code></td>\n</tr>\n<tr>\n<td>--form-space-vertical</td>\n<td><code> @padding-md;</code></td>\n</tr>\n<tr>\n<td>--form-border-bottom</td>\n<td><code> 2px solid @gray-3;</code></td>\n</tr>\n<tr>\n<td>--form-line-height</td>\n<td><code> 48px;</code></td>\n</tr>\n<tr>\n<td>--form-label-color</td>\n<td><code> @text-color;</code></td>\n</tr>\n<tr>\n<td>--form-label-width</td>\n<td><code> 146px;</code></td>\n</tr>\n<tr>\n<td>--form-label-font-size</td>\n<td><code> @font-size-md;</code></td>\n</tr>\n<tr>\n<td>--form-controll-margin-left</td>\n<td><code> 40px;</code></td>\n</tr>\n<tr>\n<td>--form-controll-color</td>\n<td><code> @text-color;</code></td>\n</tr>\n<tr>\n<td>--form-controll-font-size</td>\n<td><code> @font-size-md;</code></td>\n</tr>\n<tr>\n<td>--form-message-font-size</td>\n<td><code> @font-size-sm;</code></td>\n</tr>\n<tr>\n<td>--form-message-color</td>\n<td><code> red;</code></td>\n</tr>\n<tr>\n<td>--form-message-margin-top</td>\n<td><code> 8px;</code></td>\n</tr>\n<tr>\n<td>--form-vertical-controll-margin-top</td>\n<td><code> 20px;</code></td>\n</tr>\n</tbody>\n</table>\n</div>',
            h3Ids:
              '介绍:::引入:::基础用法:::支持多层级数据结构:::异步处理和自定义校验:::自定义组件:::FormProps <a href="h:::FormItemProps <a hre:::IFormInstance <a hre:::样式变量',
            codePath: [],
          })
      },
    },
  ],
)
