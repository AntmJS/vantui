'use strict'
;(self.webpackChunk_antmjs_vantui = self.webpackChunk_antmjs_vantui || []).push(
  [
    [7267],
    {
      7267: function (s, a, n) {
        n.r(a),
          (a.default = {
            tile: 'PowerScrollView下拉刷新',
            docs: '<h1>PowerScrollView 下拉刷新</h1>\n<div class="card"><h3 id="%E4%BB%8B%E7%BB%8D"><svg viewBox="0 0 1024 1024"  width="14" height="14"><path d="M491.054545 779.636364l-125.672727 125.672727c-32.581818 32.581818-76.8 51.2-123.345454 51.2s-90.763636-18.618182-123.345455-51.2c-67.490909-67.490909-67.490909-179.2 0-246.690909l223.418182-223.418182c32.581818-32.581818 76.8-51.2 123.345454-51.2s90.763636 18.618182 123.345455 51.2c13.963636 13.963636 34.909091 13.963636 46.545455 0 13.963636-13.963636 13.963636-34.909091 0-46.545455-93.090909-93.090909-246.690909-93.090909-342.109091 0L69.818182 612.072727c-46.545455 46.545455-69.818182 107.054545-69.818182 169.890909C0 847.127273 25.6 907.636364 69.818182 954.181818c46.545455 46.545455 109.381818 69.818182 169.890909 69.818182 62.836364 0 123.345455-23.272727 169.890909-69.818182l125.672727-125.672727c13.963636-13.963636 13.963636-34.909091 0-46.545455-9.309091-16.290909-30.254545-16.290909-44.218182-2.327272z" p-id="2808"></path><path d="M954.181818 69.818182c-93.090909-93.090909-246.690909-93.090909-342.109091 0l-125.672727 125.672727c-13.963636 13.963636-13.963636 34.909091 0 46.545455 13.963636 13.963636 34.909091 13.963636 46.545455 0L658.618182 116.363636c32.581818-32.581818 76.8-51.2 123.345454-51.2s90.763636 18.618182 123.345455 51.2c67.490909 67.490909 67.490909 179.2 0 246.690909l-223.418182 223.418182c-32.581818 32.581818-76.8 51.2-123.345454 51.2s-90.763636-18.618182-123.345455-51.2c-13.963636-13.963636-34.909091-13.963636-46.545455 0-13.963636 13.963636-13.963636 34.909091 0 46.545455 46.545455 46.545455 109.381818 69.818182 169.89091 69.818182 62.836364 0 123.345455-23.272727 169.890909-69.818182l223.418181-223.418182c46.545455-46.545455 69.818182-107.054545 69.818182-169.890909C1024 176.872727 998.4 116.363636 954.181818 69.818182z" p-id="2809"></path></svg>介绍</h3>\n<p><strong>PowerScrollView 继承于 ScrollView 补充了 ScrollView 在 Taro 中没有实现的功能, 以及新增的一些能力，因此描述 ScrollView 同样也适用于 PowerScrollView</strong></p>\n<p>可滚动视图区域。使用竖向滚动时，需要给 ScrollView 一个固定高度，通过 css 设置 height。组件属性的长度单位默认为 px\nTips: H5 中 ScrollView 组件是通过一个高度（或宽度）固定的容器内部滚动来实现的，因此务必正确的设置容器的高度。例如: 如果 ScrollView 的高度将 body 撑开，就会同时存在两个滚动条（body 下的滚动条，以及 ScrollView 的滚动条）</p>\n<blockquote>\n<p><a href="https://developers.weixin.qq.com/miniprogram/dev/component/scroll-view.html">参考文档</a></p>\n</blockquote>\n</div><div class="card"><h3 id="%E5%BC%95%E5%85%A5"><svg viewBox="0 0 1024 1024"  width="14" height="14"><path d="M491.054545 779.636364l-125.672727 125.672727c-32.581818 32.581818-76.8 51.2-123.345454 51.2s-90.763636-18.618182-123.345455-51.2c-67.490909-67.490909-67.490909-179.2 0-246.690909l223.418182-223.418182c32.581818-32.581818 76.8-51.2 123.345454-51.2s90.763636 18.618182 123.345455 51.2c13.963636 13.963636 34.909091 13.963636 46.545455 0 13.963636-13.963636 13.963636-34.909091 0-46.545455-93.090909-93.090909-246.690909-93.090909-342.109091 0L69.818182 612.072727c-46.545455 46.545455-69.818182 107.054545-69.818182 169.890909C0 847.127273 25.6 907.636364 69.818182 954.181818c46.545455 46.545455 109.381818 69.818182 169.890909 69.818182 62.836364 0 123.345455-23.272727 169.890909-69.818182l125.672727-125.672727c13.963636-13.963636 13.963636-34.909091 0-46.545455-9.309091-16.290909-30.254545-16.290909-44.218182-2.327272z" p-id="2808"></path><path d="M954.181818 69.818182c-93.090909-93.090909-246.690909-93.090909-342.109091 0l-125.672727 125.672727c-13.963636 13.963636-13.963636 34.909091 0 46.545455 13.963636 13.963636 34.909091 13.963636 46.545455 0L658.618182 116.363636c32.581818-32.581818 76.8-51.2 123.345454-51.2s90.763636 18.618182 123.345455 51.2c67.490909 67.490909 67.490909 179.2 0 246.690909l-223.418182 223.418182c-32.581818 32.581818-76.8 51.2-123.345454 51.2s-90.763636-18.618182-123.345455-51.2c-13.963636-13.963636-34.909091-13.963636-46.545455 0-13.963636 13.963636-13.963636 34.909091 0 46.545455 46.545455 46.545455 109.381818 69.818182 169.89091 69.818182 62.836364 0 123.345455-23.272727 169.890909-69.818182l223.418181-223.418182c46.545455-46.545455 69.818182-107.054545 69.818182-169.890909C1024 176.872727 998.4 116.363636 954.181818 69.818182z" p-id="2809"></path></svg>引入</h3>\n<div class="code-box-max">\n<div class="copy-code-btn"></div>\n<pre><code class="language-js"><span class="hljs-keyword">import</span> { <span class="hljs-title class_">PowerScrollView</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@antmjs/vantui&#x27;</span>\n</code></pre>\n</div>\n<p>模拟请求数据</p>\n<div class="code-box-max">\n<div class="copy-code-btn"></div>\n<pre><code class="language-js"><span class="hljs-keyword">const</span> <span class="hljs-title function_">mockRequest</span> = <span class="hljs-keyword">async</span> (<span class="hljs-params">_startIndex, isRefresh, name</span>) =&gt; {\n  <span class="hljs-keyword">const</span> <span class="hljs-title function_">sleep</span> = (<span class="hljs-params">t</span>) =&gt;\n    <span class="hljs-keyword">new</span> <span class="hljs-title class_">Promise</span>(<span class="hljs-function">(<span class="hljs-params">resolve</span>) =&gt;</span> {\n      <span class="hljs-built_in">setTimeout</span>(<span class="hljs-function">() =&gt;</span> {\n        <span class="hljs-title function_">resolve</span>()\n      }, t)\n    })\n  <span class="hljs-keyword">const</span> <span class="hljs-variable constant_">TOTAL</span> = <span class="hljs-number">100</span>\n  <span class="hljs-keyword">let</span> startIndex = _startIndex\n  <span class="hljs-keyword">if</span> (isRefresh) {\n    startIndex = <span class="hljs-number">0</span>\n  }\n  <span class="hljs-keyword">if</span> (startIndex &gt;= <span class="hljs-variable constant_">TOTAL</span>) {\n    <span class="hljs-keyword">return</span> []\n  }\n  <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">::::_QA<span class="hljs-subst">::::_ABname}</span>:请求~::::_QA</span>, <span class="hljs-string">&#x27;isRefresh:&#x27;</span>, isRefresh)\n  <span class="hljs-keyword">await</span> <span class="hljs-title function_">sleep</span>(<span class="hljs-number">1200</span>)\n  <span class="hljs-keyword">let</span> list = []\n  <span class="hljs-keyword">for</span> (<span class="hljs-keyword">let</span> i = <span class="hljs-number">0</span>; i &lt; <span class="hljs-number">20</span>; i++) {\n    list.<span class="hljs-title function_">push</span>(<span class="hljs-string">::::_QA<span class="hljs-subst">::::_ABname}</span>:::::_QA</span>)\n  }\n  <span class="hljs-keyword">return</span> list\n}\n</code></pre>\n</div>\n</div><h2>代码演示</h2>\n<div class="card"><h3 id="%E5%9F%BA%E7%A1%80%E7%94%A8%E6%B3%95"><svg viewBox="0 0 1024 1024"  width="14" height="14"><path d="M491.054545 779.636364l-125.672727 125.672727c-32.581818 32.581818-76.8 51.2-123.345454 51.2s-90.763636-18.618182-123.345455-51.2c-67.490909-67.490909-67.490909-179.2 0-246.690909l223.418182-223.418182c32.581818-32.581818 76.8-51.2 123.345454-51.2s90.763636 18.618182 123.345455 51.2c13.963636 13.963636 34.909091 13.963636 46.545455 0 13.963636-13.963636 13.963636-34.909091 0-46.545455-93.090909-93.090909-246.690909-93.090909-342.109091 0L69.818182 612.072727c-46.545455 46.545455-69.818182 107.054545-69.818182 169.890909C0 847.127273 25.6 907.636364 69.818182 954.181818c46.545455 46.545455 109.381818 69.818182 169.890909 69.818182 62.836364 0 123.345455-23.272727 169.890909-69.818182l125.672727-125.672727c13.963636-13.963636 13.963636-34.909091 0-46.545455-9.309091-16.290909-30.254545-16.290909-44.218182-2.327272z" p-id="2808"></path><path d="M954.181818 69.818182c-93.090909-93.090909-246.690909-93.090909-342.109091 0l-125.672727 125.672727c-13.963636 13.963636-13.963636 34.909091 0 46.545455 13.963636 13.963636 34.909091 13.963636 46.545455 0L658.618182 116.363636c32.581818-32.581818 76.8-51.2 123.345454-51.2s90.763636 18.618182 123.345455 51.2c67.490909 67.490909 67.490909 179.2 0 246.690909l-223.418182 223.418182c-32.581818 32.581818-76.8 51.2-123.345454 51.2s-90.763636-18.618182-123.345455-51.2c-13.963636-13.963636-34.909091-13.963636-46.545455 0-13.963636 13.963636-13.963636 34.909091 0 46.545455 46.545455 46.545455 109.381818 69.818182 169.89091 69.818182 62.836364 0 123.345455-23.272727 169.890909-69.818182l223.418181-223.418182c46.545455-46.545455 69.818182-107.054545 69.818182-169.890909C1024 176.872727 998.4 116.363636 954.181818 69.818182z" p-id="2809"></path></svg>基础用法</h3>\n<ul>\n<li>\n<p>开启下拉刷新<code>(refresherEnabled默认开启)</code>时, 下拉会触发 <code>onScrollToUpper({page,pageSize})</code> 事件，在事件的回调函数中可以进行异步操作</p>\n</li>\n<li>\n<p>开允许纵向滚动<code>(scrollY默认开启)</code>时, 当组件滚动到底部时,上拉会触发 <code>onScrollToUpper({page,pageSize})</code> 事件，在事件的回调函数中可以进行异步操作并更新数据, 若数据已全部加载完毕，则会自动渲染<code>renderFinished||finishedText</code>。</p>\n</li>\n<li>\n<p>默认的<code>current</code>是通过<code>children.length</code>来计算的,也可以传入<code>current={list.length}</code></p>\n</li>\n<li>\n<p>默认<code>pageSize</code>是<code>20</code>通常是需要铺满可滚动窗口的高度,也可以传入<code>pageSize={15}</code></p>\n</li>\n<li>\n<p><code>props.total</code> 存在<code>onScrollToUpper/onScrollToLower</code> 的入参是传入组件的<code>{page,pageSize}</code>, 不存在入参是传入组件的<code>current</code></p>\n</li>\n</ul>\n<div class="code-box-max">\n<div class="copy-code-btn"></div>\n<pre><code class="language-jsx"><span class="hljs-keyword">function</span> <span class="hljs-title function_">Demo</span>(<span class="hljs-params"></span>) {\n  <span class="hljs-keyword">const</span> { mockRequest } = <span class="hljs-variable constant_">COMMON</span>\n  <span class="hljs-keyword">const</span> [state, changeState] = react.<span class="hljs-title function_">useState</span>({\n    <span class="hljs-attr">basicsList</span>: [],\n    <span class="hljs-attr">basicsFinished</span>: <span class="hljs-literal">false</span>,\n  })\n  <span class="hljs-keyword">const</span> <span class="hljs-title function_">setState</span> = (<span class="hljs-params">newState</span>) =&gt; {\n    <span class="hljs-title function_">changeState</span>({\n      ...state,\n      ...newState,\n    })\n  }\n\n  <span class="hljs-comment">// 基础用法</span>\n  <span class="hljs-keyword">const</span> <span class="hljs-title function_">basicsDoRefresh</span> = <span class="hljs-keyword">async</span> (<span class="hljs-params">event = <span class="hljs-number">0</span></span>) =&gt; {\n    <span class="hljs-keyword">const</span> append = <span class="hljs-keyword">await</span> <span class="hljs-title function_">mockRequest</span>(state.<span class="hljs-property">basicsList</span>.<span class="hljs-property">length</span>, <span class="hljs-literal">true</span>, <span class="hljs-string">&#x27;基础用法&#x27;</span>)\n    <span class="hljs-title function_">setState</span>({\n      <span class="hljs-attr">basicsList</span>: append.<span class="hljs-title function_">map</span>(<span class="hljs-function">(<span class="hljs-params">item, index</span>) =&gt;</span> (\n        <span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">View</span>\n          <span class="hljs-attr">key</span>=<span class="hljs-string">{</span>::::_QA::::_AB<span class="hljs-attr">state.basicsList.length</span> + <span class="hljs-attr">index</span>}<span class="hljs-attr">append</span>::::_QA}\n          <span class="hljs-attr">style</span>=<span class="hljs-string">{{</span> <span class="hljs-attr">height:</span> &#x27;<span class="hljs-attr">20px</span>&#x27;, <span class="hljs-attr">lineHeight:</span> &#x27;<span class="hljs-attr">20px</span>&#x27; }}\n        &gt;</span>\n          {item}\n          <span class="hljs-tag">&lt;<span class="hljs-name">Tag</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;success&quot;</span>&gt;</span>{::::_QAindex:::::_AB\n            state.basicsList.length + index + 1\n          }::::_QA}<span class="hljs-tag">&lt;/<span class="hljs-name">Tag</span>&gt;</span>\n        <span class="hljs-tag">&lt;/<span class="hljs-name">View</span>&gt;</span></span>\n      )),\n      <span class="hljs-attr">basicsFinished</span>: append.<span class="hljs-property">length</span> === <span class="hljs-number">0</span>,\n    })\n  }\n  <span class="hljs-keyword">const</span> <span class="hljs-title function_">basicsLoadMore</span> = <span class="hljs-keyword">async</span> (<span class="hljs-params">event = <span class="hljs-number">0</span>, isRefresh = <span class="hljs-literal">false</span></span>) =&gt; {\n    <span class="hljs-keyword">let</span> append = <span class="hljs-keyword">await</span> <span class="hljs-title function_">mockRequest</span>(\n      state.<span class="hljs-property">basicsList</span>.<span class="hljs-property">length</span>,\n      isRefresh,\n      <span class="hljs-string">&#x27;基础用法&#x27;</span>,\n    )\n    append = append.<span class="hljs-title function_">map</span>(<span class="hljs-function">(<span class="hljs-params">item, index</span>) =&gt;</span> (\n      <span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">View</span>\n        <span class="hljs-attr">key</span>=<span class="hljs-string">{</span>::::_QA::::_AB<span class="hljs-attr">state.basicsList.length</span> + <span class="hljs-attr">index</span>}<span class="hljs-attr">append</span>::::_QA}\n        <span class="hljs-attr">style</span>=<span class="hljs-string">{{</span> <span class="hljs-attr">height:</span> &#x27;<span class="hljs-attr">20px</span>&#x27;, <span class="hljs-attr">lineHeight:</span> &#x27;<span class="hljs-attr">20px</span>&#x27; }}\n      &gt;</span>\n        {item}\n        <span class="hljs-tag">&lt;<span class="hljs-name">Tag</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;success&quot;</span>&gt;</span>{::::_QAindex:::::_AB\n          state.basicsList.length + index + 1\n        }::::_QA}<span class="hljs-tag">&lt;/<span class="hljs-name">Tag</span>&gt;</span>\n      <span class="hljs-tag">&lt;/<span class="hljs-name">View</span>&gt;</span></span>\n    ))\n    <span class="hljs-title function_">setState</span>({\n      <span class="hljs-attr">basicsList</span>: [...state.<span class="hljs-property">basicsList</span>, ...append],\n      <span class="hljs-attr">basicsFinished</span>: append.<span class="hljs-property">length</span> === <span class="hljs-number">0</span>,\n    })\n  }\n\n  react.<span class="hljs-title function_">useEffect</span>(<span class="hljs-function">() =&gt;</span> {\n    <span class="hljs-title function_">basicsLoadMore</span>()\n  }, [])\n\n  <span class="hljs-keyword">return</span> (\n    <span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">PowerScrollView</span>\n      <span class="hljs-attr">finishedText</span>=<span class="hljs-string">&quot;没有更多了&quot;</span>\n      <span class="hljs-attr">successText</span>=<span class="hljs-string">&quot;刷新成功&quot;</span>\n      <span class="hljs-attr">onScrollToUpper</span>=<span class="hljs-string">{basicsDoRefresh}</span>\n      <span class="hljs-attr">onScrollToLower</span>=<span class="hljs-string">{basicsLoadMore}</span>\n      <span class="hljs-attr">current</span>=<span class="hljs-string">{state.basicsList.length}</span>\n      <span class="hljs-attr">finished</span>=<span class="hljs-string">{state.basicsFinished}</span>\n    &gt;</span>\n      {state.basicsList.map((e, i) =&gt; (\n        <span class="hljs-tag">&lt;<span class="hljs-name">Cell</span> <span class="hljs-attr">key</span>=<span class="hljs-string">{i}</span> <span class="hljs-attr">title</span>=<span class="hljs-string">{e}</span> /&gt;</span>\n      ))}\n    <span class="hljs-tag">&lt;/<span class="hljs-name">PowerScrollView</span>&gt;</span></span>\n  )\n}\n</code></pre>\n</div>\n<blockquote>\n<p>PowerScrollView 会自动对 onScrollToLower/onScrollToUpper 函数加锁，避免重复的请求，但是前提是 onScrollToLower/onScrollToUpper 函数需要返回一个正确的 Promise，下面是正确和错误的用法示例：</p>\n</blockquote>\n<div class="code-box-max">\n<div class="copy-code-btn"></div>\n<pre><code class="language-js"><span class="hljs-keyword">function</span> <span class="hljs-title function_">fetch</span>(<span class="hljs-params"></span>) {\n  <span class="hljs-comment">// 错误</span>\n  <span class="hljs-title function_">doRequest</span>()\n}\n\n<span class="hljs-keyword">async</span> <span class="hljs-keyword">function</span> <span class="hljs-title function_">fetch</span>(<span class="hljs-params"></span>) {\n  <span class="hljs-comment">// 错误</span>\n  <span class="hljs-title function_">doRequest</span>()\n}\n\n<span class="hljs-keyword">async</span> <span class="hljs-keyword">function</span> <span class="hljs-title function_">fetch</span>(<span class="hljs-params"></span>) {\n  <span class="hljs-comment">// 正确</span>\n  <span class="hljs-keyword">await</span> <span class="hljs-title function_">doRequest</span>()\n}\n\n<span class="hljs-keyword">function</span> <span class="hljs-title function_">fetch</span>(<span class="hljs-params"></span>) {\n  <span class="hljs-comment">// 正确</span>\n  <span class="hljs-keyword">return</span> <span class="hljs-title function_">doRequest</span>()\n}\n</code></pre>\n</div>\n</div><div class="card"><h3 id="%E8%87%AA%E5%AE%9A%E4%B9%89%E5%8F%82%E6%95%B0"><svg viewBox="0 0 1024 1024"  width="14" height="14"><path d="M491.054545 779.636364l-125.672727 125.672727c-32.581818 32.581818-76.8 51.2-123.345454 51.2s-90.763636-18.618182-123.345455-51.2c-67.490909-67.490909-67.490909-179.2 0-246.690909l223.418182-223.418182c32.581818-32.581818 76.8-51.2 123.345454-51.2s90.763636 18.618182 123.345455 51.2c13.963636 13.963636 34.909091 13.963636 46.545455 0 13.963636-13.963636 13.963636-34.909091 0-46.545455-93.090909-93.090909-246.690909-93.090909-342.109091 0L69.818182 612.072727c-46.545455 46.545455-69.818182 107.054545-69.818182 169.890909C0 847.127273 25.6 907.636364 69.818182 954.181818c46.545455 46.545455 109.381818 69.818182 169.890909 69.818182 62.836364 0 123.345455-23.272727 169.890909-69.818182l125.672727-125.672727c13.963636-13.963636 13.963636-34.909091 0-46.545455-9.309091-16.290909-30.254545-16.290909-44.218182-2.327272z" p-id="2808"></path><path d="M954.181818 69.818182c-93.090909-93.090909-246.690909-93.090909-342.109091 0l-125.672727 125.672727c-13.963636 13.963636-13.963636 34.909091 0 46.545455 13.963636 13.963636 34.909091 13.963636 46.545455 0L658.618182 116.363636c32.581818-32.581818 76.8-51.2 123.345454-51.2s90.763636 18.618182 123.345455 51.2c67.490909 67.490909 67.490909 179.2 0 246.690909l-223.418182 223.418182c-32.581818 32.581818-76.8 51.2-123.345454 51.2s-90.763636-18.618182-123.345455-51.2c-13.963636-13.963636-34.909091-13.963636-46.545455 0-13.963636 13.963636-13.963636 34.909091 0 46.545455 46.545455 46.545455 109.381818 69.818182 169.89091 69.818182 62.836364 0 123.345455-23.272727 169.890909-69.818182l223.418181-223.418182c46.545455-46.545455 69.818182-107.054545 69.818182-169.890909C1024 176.872727 998.4 116.363636 954.181818 69.818182z" p-id="2809"></path></svg>自定义参数</h3>\n<ul>\n<li>通过<code>renderHead</code>可以自定义下拉刷新过程中的提示内容。</li>\n<li>若列表数据加载失败，把异常抛出 即可显示错误提示，用户点击错误提示后会重新触发 onScrollToUpper 事件。</li>\n</ul>\n<div class="code-box-max">\n<div class="copy-code-btn"></div>\n<pre><code class="language-jsx"><span class="hljs-keyword">function</span> <span class="hljs-title function_">Demo</span>(<span class="hljs-params"></span>) {\n  <span class="hljs-keyword">const</span> { mockRequest } = <span class="hljs-variable constant_">COMMON</span>\n  <span class="hljs-keyword">const</span> [state, changeState] = react.<span class="hljs-title function_">useState</span>({\n    <span class="hljs-attr">basicsList</span>: [],\n    <span class="hljs-attr">basicsFinished</span>: <span class="hljs-literal">false</span>,\n  })\n  <span class="hljs-keyword">const</span> <span class="hljs-title function_">setState</span> = (<span class="hljs-params">newState</span>) =&gt; {\n    <span class="hljs-title function_">changeState</span>({\n      ...state,\n      ...newState,\n    })\n  }\n\n  <span class="hljs-comment">// 基础用法</span>\n  <span class="hljs-keyword">const</span> <span class="hljs-title function_">basicsDoRefresh</span> = <span class="hljs-keyword">async</span> (<span class="hljs-params">event = <span class="hljs-number">0</span></span>) =&gt; {\n    <span class="hljs-keyword">const</span> append = <span class="hljs-keyword">await</span> <span class="hljs-title function_">mockRequest</span>(state.<span class="hljs-property">basicsList</span>.<span class="hljs-property">length</span>, <span class="hljs-literal">true</span>, <span class="hljs-string">&#x27;错误提示&#x27;</span>)\n    <span class="hljs-title function_">setState</span>({\n      <span class="hljs-attr">basicsList</span>: append.<span class="hljs-title function_">map</span>(<span class="hljs-function">(<span class="hljs-params">item, index</span>) =&gt;</span> (\n        <span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">View</span>\n          <span class="hljs-attr">key</span>=<span class="hljs-string">{</span>::::_QA::::_AB<span class="hljs-attr">index</span> + <span class="hljs-attr">state.basicsList.length</span>}<span class="hljs-attr">append</span>::::_QA}\n          <span class="hljs-attr">style</span>=<span class="hljs-string">{{</span> <span class="hljs-attr">height:</span> &#x27;<span class="hljs-attr">20px</span>&#x27;, <span class="hljs-attr">lineHeight:</span> &#x27;<span class="hljs-attr">20px</span>&#x27; }}\n        &gt;</span>\n          {item}\n          <span class="hljs-tag">&lt;<span class="hljs-name">Tag</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;success&quot;</span>&gt;</span>{::::_QAindex:::::_AB\n            index + state.basicsList.length + 1\n          }::::_QA}<span class="hljs-tag">&lt;/<span class="hljs-name">Tag</span>&gt;</span>\n        <span class="hljs-tag">&lt;/<span class="hljs-name">View</span>&gt;</span></span>\n      )),\n      <span class="hljs-attr">basicsFinished</span>: append.<span class="hljs-property">length</span> === <span class="hljs-number">0</span>,\n    })\n  }\n  <span class="hljs-keyword">const</span> <span class="hljs-title function_">basicsLoadMore</span> = <span class="hljs-keyword">async</span> (<span class="hljs-params">event = <span class="hljs-number">0</span>, isRefresh = <span class="hljs-literal">false</span></span>) =&gt; {\n    <span class="hljs-keyword">let</span> append = <span class="hljs-keyword">await</span> <span class="hljs-title function_">mockRequest</span>(\n      state.<span class="hljs-property">basicsList</span>.<span class="hljs-property">length</span>,\n      isRefresh,\n      <span class="hljs-string">&#x27;错误提示&#x27;</span>,\n    )\n    append = append.<span class="hljs-title function_">map</span>(<span class="hljs-function">(<span class="hljs-params">item, index</span>) =&gt;</span> (\n      <span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">View</span>\n        <span class="hljs-attr">key</span>=<span class="hljs-string">{</span>::::_QA::::_AB<span class="hljs-attr">index</span> + <span class="hljs-attr">state.basicsList.length</span>}<span class="hljs-attr">append</span>::::_QA}\n        <span class="hljs-attr">style</span>=<span class="hljs-string">{{</span> <span class="hljs-attr">height:</span> &#x27;<span class="hljs-attr">20px</span>&#x27;, <span class="hljs-attr">lineHeight:</span> &#x27;<span class="hljs-attr">20px</span>&#x27; }}\n      &gt;</span>\n        {item}\n        <span class="hljs-tag">&lt;<span class="hljs-name">Tag</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;success&quot;</span>&gt;</span>{::::_QAindex:::::_AB\n          index + state.basicsList.length + 1\n        }::::_QA}<span class="hljs-tag">&lt;/<span class="hljs-name">Tag</span>&gt;</span>\n      <span class="hljs-tag">&lt;/<span class="hljs-name">View</span>&gt;</span></span>\n    ))\n    <span class="hljs-keyword">if</span> ([...state.<span class="hljs-property">basicsList</span>, ...append].<span class="hljs-property">length</span> &gt; <span class="hljs-number">20</span>) {\n      <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">Error</span>(<span class="hljs-string">&#x27;抛出异常&#x27;</span>)\n    } <span class="hljs-keyword">else</span> {\n      <span class="hljs-title function_">setState</span>({\n        <span class="hljs-attr">basicsList</span>: [...state.<span class="hljs-property">basicsList</span>, ...append],\n        <span class="hljs-attr">basicsFinished</span>: append.<span class="hljs-property">length</span> === <span class="hljs-number">0</span>,\n      })\n    }\n  }\n\n  react.<span class="hljs-title function_">useEffect</span>(<span class="hljs-function">() =&gt;</span> {\n    <span class="hljs-title function_">basicsLoadMore</span>()\n  }, [])\n\n  <span class="hljs-keyword">return</span> (\n    <span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">PowerScrollView</span>\n      <span class="hljs-attr">headHeight</span>=<span class="hljs-string">&quot;80&quot;</span>\n      <span class="hljs-attr">finishedText</span>=<span class="hljs-string">&quot;没有更多了&quot;</span>\n      <span class="hljs-attr">successText</span>=<span class="hljs-string">&quot;刷新成功&quot;</span>\n      <span class="hljs-attr">onScrollToUpper</span>=<span class="hljs-string">{basicsDoRefresh}</span>\n      <span class="hljs-attr">onScrollToLower</span>=<span class="hljs-string">{basicsLoadMore}</span>\n      <span class="hljs-attr">current</span>=<span class="hljs-string">{state.basicsList.length}</span>\n      <span class="hljs-attr">finished</span>=<span class="hljs-string">{state.basicsFinished}</span>\n      <span class="hljs-attr">errorText</span>=<span class="hljs-string">&quot;请求失败，点击重新加载&quot;</span>\n      <span class="hljs-attr">pageSize</span>=<span class="hljs-string">{15}</span>\n      <span class="hljs-attr">lowerThreshold</span>=<span class="hljs-string">{300}</span>\n      <span class="hljs-attr">renderHead</span>=<span class="hljs-string">{({</span> <span class="hljs-attr">status</span>, <span class="hljs-attr">distance</span> }) =&gt;</span> {\n        if (status === &#x27;pulling&#x27;) {\n          return (\n            <span class="hljs-tag">&lt;<span class="hljs-name">Image</span>\n              <span class="hljs-attr">className</span>=<span class="hljs-string">&quot;doge&quot;</span>\n              <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;https://img01.yzcdn.cn/vant/doge.png&quot;</span>\n              <span class="hljs-attr">style</span>=<span class="hljs-string">{{</span> <span class="hljs-attr">transform:</span> ::::_QA<span class="hljs-attr">scale</span>(::::_AB<span class="hljs-attr">distance</span> / <span class="hljs-attr">80</span>})::::_QA }}\n            /&gt;</span>\n          )\n        }\n        if (status === &#x27;loosing&#x27;) {\n          // 释放提示\n          return (\n            <span class="hljs-tag">&lt;<span class="hljs-name">Image</span>\n              <span class="hljs-attr">className</span>=<span class="hljs-string">&quot;doge&quot;</span>\n              <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;https://img01.yzcdn.cn/vant/doge.png&quot;</span>\n            /&gt;</span>\n          )\n        }\n        if (status === &#x27;loading&#x27;) {\n          // 加载提示\n          return (\n            <span class="hljs-tag">&lt;<span class="hljs-name">Image</span>\n              <span class="hljs-attr">className</span>=<span class="hljs-string">&quot;doge&quot;</span>\n              <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;https://img01.yzcdn.cn/vant/doge-fire.jpg&quot;</span>\n            /&gt;</span>\n          )\n        }\n        return null\n      }}\n    &gt;\n      {state.basicsList.map((e, i) =&gt; (\n        <span class="hljs-tag">&lt;<span class="hljs-name">Cell</span> <span class="hljs-attr">key</span>=<span class="hljs-string">{i}</span> <span class="hljs-attr">title</span>=<span class="hljs-string">{e}</span> /&gt;</span>\n      ))}\n    <span class="hljs-tag">&lt;/<span class="hljs-name">PowerScrollView</span>&gt;</span></span>\n  )\n}\n</code></pre>\n</div>\n</div><div class="card"><h3 id="%E8%87%AA%E9%80%82%E5%BA%94%E9%AB%98%E5%BA%A6"><svg viewBox="0 0 1024 1024"  width="14" height="14"><path d="M491.054545 779.636364l-125.672727 125.672727c-32.581818 32.581818-76.8 51.2-123.345454 51.2s-90.763636-18.618182-123.345455-51.2c-67.490909-67.490909-67.490909-179.2 0-246.690909l223.418182-223.418182c32.581818-32.581818 76.8-51.2 123.345454-51.2s90.763636 18.618182 123.345455 51.2c13.963636 13.963636 34.909091 13.963636 46.545455 0 13.963636-13.963636 13.963636-34.909091 0-46.545455-93.090909-93.090909-246.690909-93.090909-342.109091 0L69.818182 612.072727c-46.545455 46.545455-69.818182 107.054545-69.818182 169.890909C0 847.127273 25.6 907.636364 69.818182 954.181818c46.545455 46.545455 109.381818 69.818182 169.890909 69.818182 62.836364 0 123.345455-23.272727 169.890909-69.818182l125.672727-125.672727c13.963636-13.963636 13.963636-34.909091 0-46.545455-9.309091-16.290909-30.254545-16.290909-44.218182-2.327272z" p-id="2808"></path><path d="M954.181818 69.818182c-93.090909-93.090909-246.690909-93.090909-342.109091 0l-125.672727 125.672727c-13.963636 13.963636-13.963636 34.909091 0 46.545455 13.963636 13.963636 34.909091 13.963636 46.545455 0L658.618182 116.363636c32.581818-32.581818 76.8-51.2 123.345454-51.2s90.763636 18.618182 123.345455 51.2c67.490909 67.490909 67.490909 179.2 0 246.690909l-223.418182 223.418182c-32.581818 32.581818-76.8 51.2-123.345454 51.2s-90.763636-18.618182-123.345455-51.2c-13.963636-13.963636-34.909091-13.963636-46.545455 0-13.963636 13.963636-13.963636 34.909091 0 46.545455 46.545455 46.545455 109.381818 69.818182 169.89091 69.818182 62.836364 0 123.345455-23.272727 169.890909-69.818182l223.418181-223.418182c46.545455-46.545455 69.818182-107.054545 69.818182-169.890909C1024 176.872727 998.4 116.363636 954.181818 69.818182z" p-id="2809"></path></svg>自适应高度</h3>\n<p>给<code>ScrollContainer</code>容器设置高度，内部渲染 <code>header/footer</code>之后，<code>PowerScrollView</code>会自动撑满空缺部分作为自己高度。</p>\n<div class="code-box-max">\n<div class="copy-code-btn"></div>\n<pre><code class="language-scss"><span class="hljs-selector-class">.scroll-container</span> {\n  <span class="hljs-attribute">display</span>: flex;\n  <span class="hljs-attribute">flex-direction</span>: column;\n  <span class="hljs-selector-class">.scroll-container-content</span> {\n    <span class="hljs-attribute">flex</span>: <span class="hljs-number">1</span>;\n    <span class="hljs-attribute">overflow</span>: scroll;\n    &amp; &gt; scroll-view,\n    <span class="hljs-comment">// h5</span>\n    &amp; &gt; taro-scroll-view-core {\n      <span class="hljs-attribute">height</span>: <span class="hljs-number">100%</span>;\n    }\n  }\n}\n</code></pre>\n</div>\n<div class="code-box-max">\n<div class="copy-code-btn"></div>\n<pre><code class="language-jsx"><span class="hljs-keyword">const</span> <span class="hljs-title function_">ScrollContainer</span> = (<span class="hljs-params">props</span>) =&gt; {\n  <span class="hljs-keyword">const</span> { header, footer, children, className, ...rest } = props\n  <span class="hljs-keyword">return</span> (\n    <span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">View</span> <span class="hljs-attr">className</span>=<span class="hljs-string">{</span>::::_QA<span class="hljs-attr">scroll-container</span> ::::_AB<span class="hljs-attr">className</span> || &#x27;&#x27;}::::_QA} {<span class="hljs-attr">...rest</span>}&gt;</span>\n      {header &amp;&amp; <span class="hljs-tag">&lt;<span class="hljs-name">View</span> <span class="hljs-attr">className</span>=<span class="hljs-string">&quot;scroll-container-header&quot;</span>&gt;</span>{header}<span class="hljs-tag">&lt;/<span class="hljs-name">View</span>&gt;</span>}\n      <span class="hljs-tag">&lt;<span class="hljs-name">View</span> <span class="hljs-attr">className</span>=<span class="hljs-string">&quot;scroll-container-content&quot;</span>&gt;</span>{children}<span class="hljs-tag">&lt;/<span class="hljs-name">View</span>&gt;</span>\n      {footer &amp;&amp; <span class="hljs-tag">&lt;<span class="hljs-name">View</span> <span class="hljs-attr">className</span>=<span class="hljs-string">&quot;scroll-container-footer&quot;</span>&gt;</span>{footer}<span class="hljs-tag">&lt;/<span class="hljs-name">View</span>&gt;</span>}\n    <span class="hljs-tag">&lt;/<span class="hljs-name">View</span>&gt;</span></span>\n  )\n}\n</code></pre>\n</div>\n</div><div class="card"><h3 id="%E9%85%8D%E5%90%88%E6%90%9C%E7%B4%A2%E4%BD%BF%E7%94%A8"><svg viewBox="0 0 1024 1024"  width="14" height="14"><path d="M491.054545 779.636364l-125.672727 125.672727c-32.581818 32.581818-76.8 51.2-123.345454 51.2s-90.763636-18.618182-123.345455-51.2c-67.490909-67.490909-67.490909-179.2 0-246.690909l223.418182-223.418182c32.581818-32.581818 76.8-51.2 123.345454-51.2s90.763636 18.618182 123.345455 51.2c13.963636 13.963636 34.909091 13.963636 46.545455 0 13.963636-13.963636 13.963636-34.909091 0-46.545455-93.090909-93.090909-246.690909-93.090909-342.109091 0L69.818182 612.072727c-46.545455 46.545455-69.818182 107.054545-69.818182 169.890909C0 847.127273 25.6 907.636364 69.818182 954.181818c46.545455 46.545455 109.381818 69.818182 169.890909 69.818182 62.836364 0 123.345455-23.272727 169.890909-69.818182l125.672727-125.672727c13.963636-13.963636 13.963636-34.909091 0-46.545455-9.309091-16.290909-30.254545-16.290909-44.218182-2.327272z" p-id="2808"></path><path d="M954.181818 69.818182c-93.090909-93.090909-246.690909-93.090909-342.109091 0l-125.672727 125.672727c-13.963636 13.963636-13.963636 34.909091 0 46.545455 13.963636 13.963636 34.909091 13.963636 46.545455 0L658.618182 116.363636c32.581818-32.581818 76.8-51.2 123.345454-51.2s90.763636 18.618182 123.345455 51.2c67.490909 67.490909 67.490909 179.2 0 246.690909l-223.418182 223.418182c-32.581818 32.581818-76.8 51.2-123.345454 51.2s-90.763636-18.618182-123.345455-51.2c-13.963636-13.963636-34.909091-13.963636-46.545455 0-13.963636 13.963636-13.963636 34.909091 0 46.545455 46.545455 46.545455 109.381818 69.818182 169.89091 69.818182 62.836364 0 123.345455-23.272727 169.890909-69.818182l223.418181-223.418182c46.545455-46.545455 69.818182-107.054545 69.818182-169.890909C1024 176.872727 998.4 116.363636 954.181818 69.818182z" p-id="2809"></path></svg>配合搜索使用</h3>\n<div class="code-box-max">\n<div class="copy-code-btn"></div>\n<pre><code class="language-jsx"><span class="hljs-keyword">function</span> <span class="hljs-title function_">Demo</span>(<span class="hljs-params"></span>) {\n  <span class="hljs-keyword">const</span> { mockRequest, <span class="hljs-title class_">ScrollContainer</span> } = <span class="hljs-variable constant_">COMMON</span>\n  <span class="hljs-keyword">const</span> [state, changeState] = react.<span class="hljs-title function_">useState</span>({\n    <span class="hljs-attr">basicsList</span>: [],\n    <span class="hljs-attr">basicsFinished</span>: <span class="hljs-literal">false</span>,\n    <span class="hljs-attr">searchValue</span>: <span class="hljs-string">&#x27;&#x27;</span>,\n  })\n  <span class="hljs-keyword">const</span> <span class="hljs-title function_">setState</span> = (<span class="hljs-params">newState</span>) =&gt; {\n    <span class="hljs-title function_">changeState</span>({\n      ...state,\n      ...newState,\n    })\n  }\n\n  <span class="hljs-comment">// 基础用法</span>\n  <span class="hljs-keyword">const</span> <span class="hljs-title function_">basicsDoRefresh</span> = <span class="hljs-keyword">async</span> (<span class="hljs-params">event = <span class="hljs-number">0</span></span>) =&gt; {\n    <span class="hljs-keyword">const</span> append = <span class="hljs-keyword">await</span> <span class="hljs-title function_">mockRequest</span>(state.<span class="hljs-property">basicsList</span>.<span class="hljs-property">length</span>, <span class="hljs-literal">true</span>, <span class="hljs-string">&#x27;基础用法&#x27;</span>)\n    <span class="hljs-title function_">setState</span>({\n      <span class="hljs-attr">basicsList</span>: append.<span class="hljs-title function_">map</span>(<span class="hljs-function">(<span class="hljs-params">item, index</span>) =&gt;</span> (\n        <span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">View</span>\n          <span class="hljs-attr">key</span>=<span class="hljs-string">{</span>::::_QA::::_AB<span class="hljs-attr">state.basicsList.length</span> + <span class="hljs-attr">index</span>}<span class="hljs-attr">append</span>::::_QA}\n          <span class="hljs-attr">style</span>=<span class="hljs-string">{{</span> <span class="hljs-attr">height:</span> &#x27;<span class="hljs-attr">20px</span>&#x27;, <span class="hljs-attr">lineHeight:</span> &#x27;<span class="hljs-attr">20px</span>&#x27; }}\n        &gt;</span>\n          {item}\n          <span class="hljs-tag">&lt;<span class="hljs-name">Tag</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;success&quot;</span>&gt;</span>{::::_QAindex:::::_AB\n            state.basicsList.length + index + 1\n          }::::_QA}<span class="hljs-tag">&lt;/<span class="hljs-name">Tag</span>&gt;</span>\n        <span class="hljs-tag">&lt;/<span class="hljs-name">View</span>&gt;</span></span>\n      )),\n      <span class="hljs-attr">basicsFinished</span>: append.<span class="hljs-property">length</span> === <span class="hljs-number">0</span>,\n    })\n  }\n  <span class="hljs-keyword">const</span> <span class="hljs-title function_">basicsLoadMore</span> = <span class="hljs-keyword">async</span> (<span class="hljs-params">event = <span class="hljs-number">0</span>, isRefresh = <span class="hljs-literal">false</span></span>) =&gt; {\n    <span class="hljs-keyword">let</span> append = <span class="hljs-keyword">await</span> <span class="hljs-title function_">mockRequest</span>(\n      state.<span class="hljs-property">basicsList</span>.<span class="hljs-property">length</span>,\n      isRefresh,\n      <span class="hljs-string">&#x27;基础用法&#x27;</span>,\n    )\n    append = append.<span class="hljs-title function_">map</span>(<span class="hljs-function">(<span class="hljs-params">item, index</span>) =&gt;</span> (\n      <span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">View</span>\n        <span class="hljs-attr">key</span>=<span class="hljs-string">{</span>::::_QA::::_AB<span class="hljs-attr">state.basicsList.length</span> + <span class="hljs-attr">index</span>}<span class="hljs-attr">append</span>::::_QA}\n        <span class="hljs-attr">style</span>=<span class="hljs-string">{{</span> <span class="hljs-attr">height:</span> &#x27;<span class="hljs-attr">20px</span>&#x27;, <span class="hljs-attr">lineHeight:</span> &#x27;<span class="hljs-attr">20px</span>&#x27; }}\n      &gt;</span>\n        {item}\n        <span class="hljs-tag">&lt;<span class="hljs-name">Tag</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;success&quot;</span>&gt;</span>{::::_QAindex:::::_AB\n          state.basicsList.length + index + 1\n        }::::_QA}<span class="hljs-tag">&lt;/<span class="hljs-name">Tag</span>&gt;</span>\n      <span class="hljs-tag">&lt;/<span class="hljs-name">View</span>&gt;</span></span>\n    ))\n    <span class="hljs-title function_">setState</span>({\n      <span class="hljs-attr">basicsList</span>: [...state.<span class="hljs-property">basicsList</span>, ...append],\n      <span class="hljs-attr">basicsFinished</span>: append.<span class="hljs-property">length</span> === <span class="hljs-number">0</span>,\n    })\n  }\n\n  react.<span class="hljs-title function_">useEffect</span>(<span class="hljs-function">() =&gt;</span> {\n    <span class="hljs-title function_">basicsLoadMore</span>()\n  }, [])\n\n  <span class="hljs-keyword">const</span> <span class="hljs-title function_">doSearch</span> = <span class="hljs-keyword">async</span> (<span class="hljs-params"></span>) =&gt; {\n    <span class="hljs-title function_">setState</span>({\n      <span class="hljs-attr">basicsList</span>: [],\n      <span class="hljs-attr">basicsFinished</span>: <span class="hljs-literal">false</span>,\n    })\n    <span class="hljs-keyword">await</span> <span class="hljs-title function_">basicsLoadMore</span>(<span class="hljs-literal">undefined</span>, <span class="hljs-literal">true</span>)\n  }\n\n  <span class="hljs-keyword">return</span> (\n    <span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">ScrollContainer</span>\n      <span class="hljs-attr">className</span>=<span class="hljs-string">{</span>::::_QA<span class="hljs-attr">pull-search</span>::::_QA}\n      <span class="hljs-attr">header</span>=<span class="hljs-string">{</span>\n        &lt;<span class="hljs-attr">View</span> <span class="hljs-attr">className</span>=<span class="hljs-string">&quot;header&quot;</span>&gt;</span>\n          <span class="hljs-tag">&lt;<span class="hljs-name">View</span> <span class="hljs-attr">className</span>=<span class="hljs-string">&quot;left&quot;</span>&gt;</span>\n            <span class="hljs-tag">&lt;<span class="hljs-name">Search</span>\n              <span class="hljs-attr">defaultValue</span>=<span class="hljs-string">{state.searchValue}</span>\n              <span class="hljs-attr">onChange</span>=<span class="hljs-string">{(e)</span> =&gt;</span> setState({ searchValue: e.detail })}\n            /&gt;\n          <span class="hljs-tag">&lt;/<span class="hljs-name">View</span>&gt;</span>\n          <span class="hljs-tag">&lt;<span class="hljs-name">View</span> <span class="hljs-attr">className</span>=<span class="hljs-string">&quot;right&quot;</span>&gt;</span>\n            <span class="hljs-tag">&lt;<span class="hljs-name">Button</span> <span class="hljs-attr">size</span>=<span class="hljs-string">&quot;small&quot;</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;primary&quot;</span> <span class="hljs-attr">onClick</span>=<span class="hljs-string">{doSearch}</span>&gt;</span>\n              搜索\n            <span class="hljs-tag">&lt;/<span class="hljs-name">Button</span>&gt;</span>\n          <span class="hljs-tag">&lt;/<span class="hljs-name">View</span>&gt;</span>\n        <span class="hljs-tag">&lt;/<span class="hljs-name">View</span>&gt;</span>\n      }\n      footer={<span class="hljs-tag">&lt;<span class="hljs-name">View</span> <span class="hljs-attr">className</span>=<span class="hljs-string">&quot;footer&quot;</span>&gt;</span>自适应scroll-footer<span class="hljs-tag">&lt;/<span class="hljs-name">View</span>&gt;</span>}\n    &gt;\n      {\n        <span class="hljs-tag">&lt;&gt;</span>\n          {state.searchFinished || state.basicsList.length &gt; 0 ? (\n            <span class="hljs-tag">&lt;<span class="hljs-name">PowerScrollView</span>\n              <span class="hljs-attr">finishedText</span>=<span class="hljs-string">&quot;--- 我是有底线的 ---&quot;</span>\n              <span class="hljs-attr">onScrollToUpper</span>=<span class="hljs-string">{basicsDoRefresh}</span>\n              <span class="hljs-attr">onScrollToLower</span>=<span class="hljs-string">{basicsLoadMore}</span>\n              <span class="hljs-attr">lowerThreshold</span>=<span class="hljs-string">{300}</span>\n              <span class="hljs-attr">headHeight</span>=<span class="hljs-string">&quot;80&quot;</span>\n              <span class="hljs-attr">minTriggerTopDistance</span>=<span class="hljs-string">&quot;150&quot;</span>\n              <span class="hljs-attr">finished</span>=<span class="hljs-string">{state.basicsFinished}</span>\n              <span class="hljs-attr">renderHead</span>=<span class="hljs-string">{({</span> <span class="hljs-attr">distance</span>, <span class="hljs-attr">status</span> }) =&gt;</span> {\n                return (\n                  <span class="hljs-tag">&lt;<span class="hljs-name">Image</span>\n                    <span class="hljs-attr">className</span>=<span class="hljs-string">&quot;doge&quot;</span>\n                    <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;https://img-blog.csdnimg.cn/20210515142150468.gif&quot;</span>\n                    <span class="hljs-attr">style</span>=<span class="hljs-string">{</span>\n                      <span class="hljs-attr">status</span> === <span class="hljs-string">&#x27;pulling&#x27;</span>\n                        ? { <span class="hljs-attr">transform:</span> ::::_QA<span class="hljs-attr">scale</span>(::::_AB<span class="hljs-attr">distance</span> / <span class="hljs-attr">80</span>})::::_QA }\n                        <span class="hljs-attr">:</span> &#x27;&#x27;\n                    }\n                  /&gt;</span>\n                )\n              }}\n            &gt;\n              {state.basicsList.map((e, i) =&gt; (\n                <span class="hljs-tag">&lt;<span class="hljs-name">Cell</span> <span class="hljs-attr">key</span>=<span class="hljs-string">{i}</span> <span class="hljs-attr">title</span>=<span class="hljs-string">{e}</span> /&gt;</span>\n              ))}\n            <span class="hljs-tag">&lt;/<span class="hljs-name">PowerScrollView</span>&gt;</span>\n          ) : (\n            <span class="hljs-tag">&lt;<span class="hljs-name">View</span> <span class="hljs-attr">className</span>=<span class="hljs-string">&quot;placeholder&quot;</span>&gt;</span>\n              <span class="hljs-tag">&lt;<span class="hljs-name">View</span> <span class="hljs-attr">className</span>=<span class="hljs-string">&quot;loadingWrapper&quot;</span>&gt;</span>\n                <span class="hljs-tag">&lt;<span class="hljs-name">Loading</span> /&gt;</span>\n              <span class="hljs-tag">&lt;/<span class="hljs-name">View</span>&gt;</span>\n              正在拼命加载数据\n            <span class="hljs-tag">&lt;/<span class="hljs-name">View</span>&gt;</span>\n          )}\n        <span class="hljs-tag">&lt;/&gt;</span></span>\n      }\n    &lt;/<span class="hljs-title class_">ScrollContainer</span>&gt;\n  )\n}\n</code></pre>\n</div>\n<div class="code-box-max">\n<div class="copy-code-btn"></div>\n<pre><code class="language-js">state = {\n  <span class="hljs-comment">// error</span>\n  <span class="hljs-attr">searchList</span>: [],\n  <span class="hljs-attr">searchFinished</span>: <span class="hljs-literal">false</span>,\n  <span class="hljs-attr">searchValue</span>: <span class="hljs-string">&#x27;empty&#x27;</span>,\n}\nhandleChange = <span class="hljs-function">(<span class="hljs-params">e</span>) =&gt;</span> {\n  <span class="hljs-title function_">setState</span>({\n    <span class="hljs-attr">searchValue</span>: e.<span class="hljs-property">detail</span>,\n  })\n}\n  <span class="hljs-comment">// 搜索</span>\ndoSearch = <span class="hljs-keyword">async</span> () =&gt; {\n  <span class="hljs-title function_">setState</span>({\n    <span class="hljs-attr">searchList</span>: [],\n    <span class="hljs-attr">searchFinished</span>: <span class="hljs-literal">false</span>,\n  })\n\n  <span class="hljs-keyword">await</span> <span class="hljs-title function_">searchLoadMore</span>(<span class="hljs-literal">undefined</span>, <span class="hljs-literal">true</span>)\n}\n\nsearchDoRefresh = <span class="hljs-keyword">async</span> (event = <span class="hljs-number">0</span>) =&gt; {\n  <span class="hljs-keyword">const</span> append = <span class="hljs-keyword">await</span> <span class="hljs-title function_">mockRequest</span>(\n    state.<span class="hljs-property">searchList</span>.<span class="hljs-property">length</span>,\n    <span class="hljs-literal">true</span>,\n    <span class="hljs-string">&#x27;配合搜索使用&#x27;</span>,\n  )\n  <span class="hljs-keyword">if</span> (state.<span class="hljs-property">searchValue</span> === <span class="hljs-string">&#x27;empty&#x27;</span>) {\n    <span class="hljs-title function_">setState</span>({\n      <span class="hljs-attr">searchList</span>: [],\n      <span class="hljs-attr">searchFinished</span>: <span class="hljs-literal">true</span>,\n    })\n    <span class="hljs-keyword">return</span>\n  }\n  <span class="hljs-title function_">setState</span>({\n    <span class="hljs-attr">searchList</span>: append,\n  })\n}\nsearchLoadMore = <span class="hljs-keyword">async</span> (event = <span class="hljs-number">0</span>,isRefresh = <span class="hljs-literal">false</span>) =&gt; {\n  <span class="hljs-keyword">const</span> append = <span class="hljs-keyword">await</span> <span class="hljs-title function_">mockRequest</span>(\n    state.<span class="hljs-property">searchList</span>.<span class="hljs-property">length</span>,\n    isRefresh,\n    <span class="hljs-string">&#x27;配合搜索使用&#x27;</span>,\n  )\n\n  <span class="hljs-keyword">if</span> (state.<span class="hljs-property">searchValue</span> === <span class="hljs-string">&#x27;empty&#x27;</span>) {\n    <span class="hljs-title function_">setState</span>({\n      <span class="hljs-attr">searchList</span>: [],\n      <span class="hljs-attr">searchFinished</span>: <span class="hljs-literal">true</span>,\n    })\n    <span class="hljs-keyword">return</span>\n  }\n  <span class="hljs-title function_">setState</span>({\n    <span class="hljs-attr">searchList</span>: [...state.<span class="hljs-property">searchList</span>, ...append],\n    <span class="hljs-attr">searchFinished</span>: append.<span class="hljs-property">length</span> === <span class="hljs-number">0</span>,\n  })\n}\n<span class="hljs-title function_">onLoad</span>(<span class="hljs-params"></span>) {\n  <span class="hljs-title function_">searchLoadMore</span>()\n}\n</code></pre>\n</div>\n</div><h2>API</h2>\n<div class="card"><h3 id="%E7%9B%B8%E5%AF%B9%E4%BA%8E%20ScrollView%20%E6%96%B0%E5%A2%9E%20Pr"><svg viewBox="0 0 1024 1024"  width="14" height="14"><path d="M491.054545 779.636364l-125.672727 125.672727c-32.581818 32.581818-76.8 51.2-123.345454 51.2s-90.763636-18.618182-123.345455-51.2c-67.490909-67.490909-67.490909-179.2 0-246.690909l223.418182-223.418182c32.581818-32.581818 76.8-51.2 123.345454-51.2s90.763636 18.618182 123.345455 51.2c13.963636 13.963636 34.909091 13.963636 46.545455 0 13.963636-13.963636 13.963636-34.909091 0-46.545455-93.090909-93.090909-246.690909-93.090909-342.109091 0L69.818182 612.072727c-46.545455 46.545455-69.818182 107.054545-69.818182 169.890909C0 847.127273 25.6 907.636364 69.818182 954.181818c46.545455 46.545455 109.381818 69.818182 169.890909 69.818182 62.836364 0 123.345455-23.272727 169.890909-69.818182l125.672727-125.672727c13.963636-13.963636 13.963636-34.909091 0-46.545455-9.309091-16.290909-30.254545-16.290909-44.218182-2.327272z" p-id="2808"></path><path d="M954.181818 69.818182c-93.090909-93.090909-246.690909-93.090909-342.109091 0l-125.672727 125.672727c-13.963636 13.963636-13.963636 34.909091 0 46.545455 13.963636 13.963636 34.909091 13.963636 46.545455 0L658.618182 116.363636c32.581818-32.581818 76.8-51.2 123.345454-51.2s90.763636 18.618182 123.345455 51.2c67.490909 67.490909 67.490909 179.2 0 246.690909l-223.418182 223.418182c-32.581818 32.581818-76.8 51.2-123.345454 51.2s-90.763636-18.618182-123.345455-51.2c-13.963636-13.963636-34.909091-13.963636-46.545455 0-13.963636 13.963636-13.963636 34.909091 0 46.545455 46.545455 46.545455 109.381818 69.818182 169.89091 69.818182 62.836364 0 123.345455-23.272727 169.890909-69.818182l223.418181-223.418182c46.545455-46.545455 69.818182-107.054545 69.818182-169.890909C1024 176.872727 998.4 116.363636 954.181818 69.818182z" p-id="2809"></path></svg>相对于 ScrollView 新增 Props</h3>\n<table>\n<thead>\n<tr>\n<th>参数</th>\n<th>说明</th>\n<th>类型</th>\n<th>默认值</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>pullingText</td>\n<td>下拉过程提示文案</td>\n<td><em>string</em></td>\n<td><code>下拉即可刷新...</code></td>\n</tr>\n<tr>\n<td>loosingText</td>\n<td>释放过程提示文案</td>\n<td><em>string</em></td>\n<td><code>释放即可刷新...</code></td>\n</tr>\n<tr>\n<td>loadingText</td>\n<td>加载过程提示文案</td>\n<td><em>string</em></td>\n<td><code>加载中...</code></td>\n</tr>\n<tr>\n<td>successText</td>\n<td>刷新成功提示文案</td>\n<td><em>string</em></td>\n<td>-</td>\n</tr>\n<tr>\n<td>successDuration</td>\n<td>刷新成功提示展示时长(ms)</td>\n<td><em>number | string</em></td>\n<td><code>500</code></td>\n</tr>\n<tr>\n<td>animationDuration</td>\n<td>动画时长</td>\n<td><em>number | string</em></td>\n<td><code>300</code></td>\n</tr>\n<tr>\n<td>headHeight</td>\n<td>顶部内容高度</td>\n<td><em>number | string</em></td>\n<td><code>50</code></td>\n</tr>\n<tr>\n<td>minTriggerTopDistance</td>\n<td>最小触发下拉距离顶部距离</td>\n<td><em>number | string</em></td>\n<td><code>150</code></td>\n</tr>\n<tr>\n<td>pullDistance</td>\n<td>触发下拉刷新的距离</td>\n<td><em>number | string</em></td>\n<td>与 <code>headHeight</code> 一致</td>\n</tr>\n<tr>\n<td>finished</td>\n<td>是否已加载完成，加载完成后不再触发 load 事件</td>\n<td><em>boolean</em></td>\n<td><code>false</code></td>\n</tr>\n<tr>\n<td>finishedText</td>\n<td>加载完成后的提示文案</td>\n<td><em>string</em></td>\n<td>-</td>\n</tr>\n<tr>\n<td>errorText</td>\n<td>加载失败后的提示文案</td>\n<td><em>string</em></td>\n<td>-</td>\n</tr>\n<tr>\n<td>total</td>\n<td>列表总个数</td>\n<td><em>number</em></td>\n<td>-</td>\n</tr>\n<tr>\n<td>current</td>\n<td>当前列表个数</td>\n<td><em>number</em></td>\n<td><code>children.length</code></td>\n</tr>\n<tr>\n<td>pageSize</td>\n<td>一页个数</td>\n<td><em>number</em></td>\n<td><code>20</code></td>\n</tr>\n<tr>\n<td>emptyImage</td>\n<td>没有内容时，图片类型，可选值为 error network search，支持传入图片 URL</td>\n<td><em>string</em></td>\n<td><code>default</code></td>\n</tr>\n<tr>\n<td>emptyDescription</td>\n<td>没有内容时，图片下方的描述文字</td>\n<td><em>string</em></td>\n<td>-</td>\n</tr>\n</tbody>\n</table>\n</div><div class="card"><h3 id="%E8%87%AA%E5%AE%9A%E4%B9%89%20Render"><svg viewBox="0 0 1024 1024"  width="14" height="14"><path d="M491.054545 779.636364l-125.672727 125.672727c-32.581818 32.581818-76.8 51.2-123.345454 51.2s-90.763636-18.618182-123.345455-51.2c-67.490909-67.490909-67.490909-179.2 0-246.690909l223.418182-223.418182c32.581818-32.581818 76.8-51.2 123.345454-51.2s90.763636 18.618182 123.345455 51.2c13.963636 13.963636 34.909091 13.963636 46.545455 0 13.963636-13.963636 13.963636-34.909091 0-46.545455-93.090909-93.090909-246.690909-93.090909-342.109091 0L69.818182 612.072727c-46.545455 46.545455-69.818182 107.054545-69.818182 169.890909C0 847.127273 25.6 907.636364 69.818182 954.181818c46.545455 46.545455 109.381818 69.818182 169.890909 69.818182 62.836364 0 123.345455-23.272727 169.890909-69.818182l125.672727-125.672727c13.963636-13.963636 13.963636-34.909091 0-46.545455-9.309091-16.290909-30.254545-16.290909-44.218182-2.327272z" p-id="2808"></path><path d="M954.181818 69.818182c-93.090909-93.090909-246.690909-93.090909-342.109091 0l-125.672727 125.672727c-13.963636 13.963636-13.963636 34.909091 0 46.545455 13.963636 13.963636 34.909091 13.963636 46.545455 0L658.618182 116.363636c32.581818-32.581818 76.8-51.2 123.345454-51.2s90.763636 18.618182 123.345455 51.2c67.490909 67.490909 67.490909 179.2 0 246.690909l-223.418182 223.418182c-32.581818 32.581818-76.8 51.2-123.345454 51.2s-90.763636-18.618182-123.345455-51.2c-13.963636-13.963636-34.909091-13.963636-46.545455 0-13.963636 13.963636-13.963636 34.909091 0 46.545455 46.545455 46.545455 109.381818 69.818182 169.89091 69.818182 62.836364 0 123.345455-23.272727 169.890909-69.818182l223.418181-223.418182c46.545455-46.545455 69.818182-107.054545 69.818182-169.890909C1024 176.872727 998.4 116.363636 954.181818 69.818182z" p-id="2809"></path></svg>自定义 Render</h3>\n<p>status = \'normal\'\n| \'loading\'\n| \'loosing\'\n| \'pulling\'\n| \'success\'</p>\n<table>\n<thead>\n<tr>\n<th>名称</th>\n<th>说明</th>\n<th>参数</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>renderLoading</td>\n<td>自定义底部加载中提示</td>\n<td></td>\n</tr>\n<tr>\n<td>renderFinished</td>\n<td>自定义加载完成后的提示文案</td>\n<td>-</td>\n</tr>\n<tr>\n<td>renderError</td>\n<td>自定义加载失败后的提示文案</td>\n<td>-</td>\n</tr>\n<tr>\n<td>renderHead</td>\n<td>自定义下拉刷新区域</td>\n<td>{status: 下拉状态, distance: 当前下拉距离}</td>\n</tr>\n</tbody>\n</table>\n</div><div class="card"><h3 id="ScrollView%20%E5%8E%9F%E6%9C%89%E5%B1%9E%E6%80%A7%E9%87%8D%E5%86%99%E6%88%96%E8%A1%A5%E5%85%85"><svg viewBox="0 0 1024 1024"  width="14" height="14"><path d="M491.054545 779.636364l-125.672727 125.672727c-32.581818 32.581818-76.8 51.2-123.345454 51.2s-90.763636-18.618182-123.345455-51.2c-67.490909-67.490909-67.490909-179.2 0-246.690909l223.418182-223.418182c32.581818-32.581818 76.8-51.2 123.345454-51.2s90.763636 18.618182 123.345455 51.2c13.963636 13.963636 34.909091 13.963636 46.545455 0 13.963636-13.963636 13.963636-34.909091 0-46.545455-93.090909-93.090909-246.690909-93.090909-342.109091 0L69.818182 612.072727c-46.545455 46.545455-69.818182 107.054545-69.818182 169.890909C0 847.127273 25.6 907.636364 69.818182 954.181818c46.545455 46.545455 109.381818 69.818182 169.890909 69.818182 62.836364 0 123.345455-23.272727 169.890909-69.818182l125.672727-125.672727c13.963636-13.963636 13.963636-34.909091 0-46.545455-9.309091-16.290909-30.254545-16.290909-44.218182-2.327272z" p-id="2808"></path><path d="M954.181818 69.818182c-93.090909-93.090909-246.690909-93.090909-342.109091 0l-125.672727 125.672727c-13.963636 13.963636-13.963636 34.909091 0 46.545455 13.963636 13.963636 34.909091 13.963636 46.545455 0L658.618182 116.363636c32.581818-32.581818 76.8-51.2 123.345454-51.2s90.763636 18.618182 123.345455 51.2c67.490909 67.490909 67.490909 179.2 0 246.690909l-223.418182 223.418182c-32.581818 32.581818-76.8 51.2-123.345454 51.2s-90.763636-18.618182-123.345455-51.2c-13.963636-13.963636-34.909091-13.963636-46.545455 0-13.963636 13.963636-13.963636 34.909091 0 46.545455 46.545455 46.545455 109.381818 69.818182 169.89091 69.818182 62.836364 0 123.345455-23.272727 169.890909-69.818182l223.418181-223.418182c46.545455-46.545455 69.818182-107.054545 69.818182-169.890909C1024 176.872727 998.4 116.363636 954.181818 69.818182z" p-id="2809"></path></svg>ScrollView 原有属性重写或补充</h3>\n<table>\n<thead>\n<tr>\n<th>参数</th>\n<th>说明</th>\n<th>类型</th>\n<th>默认值</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>scrollY</td>\n<td>允许纵向滚动</td>\n<td><em>boolean</em></td>\n<td><code>true</code></td>\n</tr>\n<tr>\n<td>refresherEnabled</td>\n<td>开启下拉刷新</td>\n<td><em>boolean</em></td>\n<td><code>true</code></td>\n</tr>\n<tr>\n<td>lowerThreshold</td>\n<td>距底部/右边多远时（单位 px），触发<code>onScrolltolower</code> 事件</td>\n<td><em>number</em></td>\n<td><code>250</code></td>\n</tr>\n<tr>\n<td>onScrollToUpper</td>\n<td>下拉刷新时触发</td>\n<td><em>({page: number,paseSize:number}|number) =&gt; Promise&lt;void&gt;</em></td>\n<td><code>()=&gt;{}</code></td>\n</tr>\n<tr>\n<td>onScrollToLower</td>\n<td>滚动条与底部距离小于 lowerThreshold 时触发</td>\n<td><em>({page: number,paseSize:number}|number) =&gt; Promise&lt;void&gt;</em></td>\n<td><code>() =&gt;{}</code></td>\n</tr>\n</tbody>\n</table>\n</div>',
            h3Ids:
              '介绍:::引入:::基础用法:::自定义参数:::自适应高度:::配合搜索使用:::相对于 ScrollView 新增 Pr:::自定义 Render:::ScrollView 原有属性重写或补充',
            codePath: [],
          })
      },
    },
  ],
)
